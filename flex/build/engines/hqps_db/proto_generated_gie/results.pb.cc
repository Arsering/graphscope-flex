// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: results.proto

#include "results.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NameOrId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Pair;
}  // namespace protobuf_common_2eproto
namespace protobuf_results_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Collection;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphPath;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Record;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Results;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Column;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GraphPath_VertexOrEdge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Property;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Vertex;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_results_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Element;
}  // namespace protobuf_results_2eproto
namespace results {
class PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Property>
      _instance;
} _Property_default_instance_;
class VertexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vertex>
      _instance;
} _Vertex_default_instance_;
class EdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Edge>
      _instance;
} _Edge_default_instance_;
class GraphPath_VertexOrEdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPath_VertexOrEdge>
      _instance;
  const ::results::Vertex* vertex_;
  const ::results::Edge* edge_;
} _GraphPath_VertexOrEdge_default_instance_;
class GraphPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPath>
      _instance;
} _GraphPath_default_instance_;
class ElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Element>
      _instance;
  const ::results::Vertex* vertex_;
  const ::results::Edge* edge_;
  const ::results::GraphPath* graph_path_;
  const ::common::Value* object_;
} _Element_default_instance_;
class CollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Collection>
      _instance;
} _Collection_default_instance_;
class EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entry>
      _instance;
  const ::results::Element* element_;
  const ::results::Collection* collection_;
} _Entry_default_instance_;
class ColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Column>
      _instance;
} _Column_default_instance_;
class RecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Record>
      _instance;
} _Record_default_instance_;
class ResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Results>
      _instance;
  const ::results::Record* record_;
} _Results_default_instance_;
class CollectiveResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CollectiveResults>
      _instance;
} _CollectiveResults_default_instance_;
}  // namespace results
namespace protobuf_results_2eproto {
static void InitDefaultsProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Property_default_instance_;
    new (ptr) ::results::Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Property::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Property =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProperty}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,
      &protobuf_common_2eproto::scc_info_Pair.base,}};

static void InitDefaultsVertex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Vertex_default_instance_;
    new (ptr) ::results::Vertex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Vertex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Vertex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVertex}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,
      &protobuf_results_2eproto::scc_info_Property.base,}};

static void InitDefaultsEdge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Edge_default_instance_;
    new (ptr) ::results::Edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEdge}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,
      &protobuf_results_2eproto::scc_info_Property.base,}};

static void InitDefaultsGraphPath_VertexOrEdge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_GraphPath_VertexOrEdge_default_instance_;
    new (ptr) ::results::GraphPath_VertexOrEdge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::GraphPath_VertexOrEdge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GraphPath_VertexOrEdge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGraphPath_VertexOrEdge}, {
      &protobuf_results_2eproto::scc_info_Vertex.base,
      &protobuf_results_2eproto::scc_info_Edge.base,}};

static void InitDefaultsGraphPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_GraphPath_default_instance_;
    new (ptr) ::results::GraphPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::GraphPath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphPath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphPath}, {
      &protobuf_results_2eproto::scc_info_GraphPath_VertexOrEdge.base,}};

static void InitDefaultsElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Element_default_instance_;
    new (ptr) ::results::Element();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Element::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Element =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsElement}, {
      &protobuf_results_2eproto::scc_info_Vertex.base,
      &protobuf_results_2eproto::scc_info_Edge.base,
      &protobuf_results_2eproto::scc_info_GraphPath.base,
      &protobuf_common_2eproto::scc_info_Pair.base,}};

static void InitDefaultsCollection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Collection_default_instance_;
    new (ptr) ::results::Collection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Collection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Collection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCollection}, {
      &protobuf_results_2eproto::scc_info_Element.base,}};

static void InitDefaultsEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Entry_default_instance_;
    new (ptr) ::results::Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEntry}, {
      &protobuf_results_2eproto::scc_info_Element.base,
      &protobuf_results_2eproto::scc_info_Collection.base,}};

static void InitDefaultsColumn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Column_default_instance_;
    new (ptr) ::results::Column();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Column::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Column =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsColumn}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,
      &protobuf_results_2eproto::scc_info_Entry.base,}};

static void InitDefaultsRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Record_default_instance_;
    new (ptr) ::results::Record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Record =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecord}, {
      &protobuf_results_2eproto::scc_info_Column.base,}};

static void InitDefaultsResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_Results_default_instance_;
    new (ptr) ::results::Results();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::Results::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Results =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResults}, {
      &protobuf_results_2eproto::scc_info_Record.base,}};

static void InitDefaultsCollectiveResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::results::_CollectiveResults_default_instance_;
    new (ptr) ::results::CollectiveResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::results::CollectiveResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CollectiveResults =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCollectiveResults}, {
      &protobuf_results_2eproto::scc_info_Results.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Property.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vertex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Edge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPath_VertexOrEdge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Element.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Collection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Column.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Record.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Results.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CollectiveResults.base);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Property, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Property, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Vertex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Vertex, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Vertex, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Vertex, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, src_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, src_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, dst_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, dst_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Edge, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::GraphPath_VertexOrEdge, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::GraphPath_VertexOrEdge, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::results::GraphPath_VertexOrEdgeDefaultTypeInternal, vertex_),
  offsetof(::results::GraphPath_VertexOrEdgeDefaultTypeInternal, edge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::GraphPath_VertexOrEdge, inner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::GraphPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::GraphPath, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Element, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Element, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::results::ElementDefaultTypeInternal, vertex_),
  offsetof(::results::ElementDefaultTypeInternal, edge_),
  offsetof(::results::ElementDefaultTypeInternal, graph_path_),
  offsetof(::results::ElementDefaultTypeInternal, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Element, inner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Collection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Collection, collection_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Entry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::results::EntryDefaultTypeInternal, element_),
  offsetof(::results::EntryDefaultTypeInternal, collection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Entry, inner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Column, name_or_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Column, entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Record, columns_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Results, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Results, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::results::ResultsDefaultTypeInternal, record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::Results, inner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::CollectiveResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::results::CollectiveResults, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::results::Property)},
  { 7, -1, sizeof(::results::Vertex)},
  { 15, -1, sizeof(::results::Edge)},
  { 27, -1, sizeof(::results::GraphPath_VertexOrEdge)},
  { 35, -1, sizeof(::results::GraphPath)},
  { 41, -1, sizeof(::results::Element)},
  { 51, -1, sizeof(::results::Collection)},
  { 57, -1, sizeof(::results::Entry)},
  { 65, -1, sizeof(::results::Column)},
  { 72, -1, sizeof(::results::Record)},
  { 78, -1, sizeof(::results::Results)},
  { 85, -1, sizeof(::results::CollectiveResults)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Vertex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Edge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_GraphPath_VertexOrEdge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_GraphPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Element_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Collection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Column_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_Results_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::results::_CollectiveResults_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "results.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rresults.proto\022\007results\032\014common.proto\032\n"
      "expr.proto\"G\n\010Property\022\035\n\003key\030\001 \001(\0132\020.co"
      "mmon.NameOrId\022\034\n\005value\030\002 \001(\0132\r.common.Va"
      "lue\"\\\n\006Vertex\022\n\n\002id\030\001 \001(\003\022\037\n\005label\030\002 \001(\013"
      "2\020.common.NameOrId\022%\n\nproperties\030\003 \003(\0132\021"
      ".results.Property\"\304\001\n\004Edge\022\n\n\002id\030\001 \001(\003\022\037"
      "\n\005label\030\002 \001(\0132\020.common.NameOrId\022\016\n\006src_i"
      "d\030\003 \001(\003\022#\n\tsrc_label\030\004 \001(\0132\020.common.Name"
      "OrId\022\016\n\006dst_id\030\005 \001(\003\022#\n\tdst_label\030\006 \001(\0132"
      "\020.common.NameOrId\022%\n\nproperties\030\007 \003(\0132\021."
      "results.Property\"\225\001\n\tGraphPath\022-\n\004path\030\001"
      " \003(\0132\037.results.GraphPath.VertexOrEdge\032Y\n"
      "\014VertexOrEdge\022!\n\006vertex\030\001 \001(\0132\017.results."
      "VertexH\000\022\035\n\004edge\030\002 \001(\0132\r.results.EdgeH\000B"
      "\007\n\005inner\"\237\001\n\007Element\022!\n\006vertex\030\001 \001(\0132\017.r"
      "esults.VertexH\000\022\035\n\004edge\030\002 \001(\0132\r.results."
      "EdgeH\000\022(\n\ngraph_path\030\003 \001(\0132\022.results.Gra"
      "phPathH\000\022\037\n\006object\030\004 \001(\0132\r.common.ValueH"
      "\000B\007\n\005inner\"2\n\nCollection\022$\n\ncollection\030\001"
      " \003(\0132\020.results.Element\"`\n\005Entry\022#\n\007eleme"
      "nt\030\001 \001(\0132\020.results.ElementH\000\022)\n\ncollecti"
      "on\030\002 \001(\0132\023.results.CollectionH\000B\007\n\005inner"
      "\"M\n\006Column\022$\n\nname_or_id\030\001 \001(\0132\020.common."
      "NameOrId\022\035\n\005entry\030\002 \001(\0132\016.results.Entry\""
      "*\n\006Record\022 \n\007columns\030\001 \003(\0132\017.results.Col"
      "umn\"5\n\007Results\022!\n\006record\030\001 \001(\0132\017.results"
      ".RecordH\000B\007\n\005inner\"6\n\021CollectiveResults\022"
      "!\n\007results\030\001 \003(\0132\020.results.ResultsB-\n!co"
      "m.alibaba.graphscope.gaia.protoB\010IrResul"
      "tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1169);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "results.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_expr_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_results_2eproto
namespace results {

// ===================================================================

void Property::InitAsDefaultInstance() {
  ::results::_Property_default_instance_._instance.get_mutable()->key_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
  ::results::_Property_default_instance_._instance.get_mutable()->value_ = const_cast< ::common::Value*>(
      ::common::Value::internal_default_instance());
}
void Property::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
void Property::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kKeyFieldNumber;
const int Property::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Property.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::common::NameOrId(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::common::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:results.Property)
}

void Property::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:results.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Property& Property::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Property.base);
  return *internal_default_instance();
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Property)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.NameOrId key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Value value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .common.Value value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .common.Value value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Property)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.NameOrId key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .common.Value value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::common::NameOrId::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::common::Value::MergeFrom(from.value());
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vertex::InitAsDefaultInstance() {
  ::results::_Vertex_default_instance_._instance.get_mutable()->label_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
}
void Vertex::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vertex::kIdFieldNumber;
const int Vertex::kLabelFieldNumber;
const int Vertex::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vertex::Vertex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Vertex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Vertex)
}
Vertex::Vertex(const Vertex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_label()) {
    label_ = new ::common::NameOrId(*from.label_);
  } else {
    label_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:results.Vertex)
}

void Vertex::SharedCtor() {
  ::memset(&label_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&label_)) + sizeof(id_));
}

Vertex::~Vertex() {
  // @@protoc_insertion_point(destructor:results.Vertex)
  SharedDtor();
}

void Vertex::SharedDtor() {
  if (this != internal_default_instance()) delete label_;
}

void Vertex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vertex::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vertex& Vertex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Vertex.base);
  return *internal_default_instance();
}


void Vertex::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Vertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Vertex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Vertex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.NameOrId label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .results.Property properties = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Vertex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Vertex)
  return false;
#undef DO_
}

void Vertex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Vertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_label(), output);
  }

  // repeated .results.Property properties = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Vertex)
}

::google::protobuf::uint8* Vertex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Vertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_label(), deterministic, target);
  }

  // repeated .results.Property properties = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Vertex)
  return target;
}

size_t Vertex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Vertex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.Property properties = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *label_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vertex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Vertex)
  GOOGLE_DCHECK_NE(&from, this);
  const Vertex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vertex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Vertex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Vertex)
    MergeFrom(*source);
  }
}

void Vertex::MergeFrom(const Vertex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Vertex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_label()) {
    mutable_label()->::common::NameOrId::MergeFrom(from.label());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Vertex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vertex::CopyFrom(const Vertex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vertex::IsInitialized() const {
  return true;
}

void Vertex::Swap(Vertex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vertex::InternalSwap(Vertex* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  swap(label_, other->label_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vertex::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Edge::InitAsDefaultInstance() {
  ::results::_Edge_default_instance_._instance.get_mutable()->label_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
  ::results::_Edge_default_instance_._instance.get_mutable()->src_label_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
  ::results::_Edge_default_instance_._instance.get_mutable()->dst_label_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
}
void Edge::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
}
void Edge::clear_src_label() {
  if (GetArenaNoVirtual() == NULL && src_label_ != NULL) {
    delete src_label_;
  }
  src_label_ = NULL;
}
void Edge::clear_dst_label() {
  if (GetArenaNoVirtual() == NULL && dst_label_ != NULL) {
    delete dst_label_;
  }
  dst_label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edge::kIdFieldNumber;
const int Edge::kLabelFieldNumber;
const int Edge::kSrcIdFieldNumber;
const int Edge::kSrcLabelFieldNumber;
const int Edge::kDstIdFieldNumber;
const int Edge::kDstLabelFieldNumber;
const int Edge::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edge::Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Edge)
}
Edge::Edge(const Edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_label()) {
    label_ = new ::common::NameOrId(*from.label_);
  } else {
    label_ = NULL;
  }
  if (from.has_src_label()) {
    src_label_ = new ::common::NameOrId(*from.src_label_);
  } else {
    src_label_ = NULL;
  }
  if (from.has_dst_label()) {
    dst_label_ = new ::common::NameOrId(*from.dst_label_);
  } else {
    dst_label_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dst_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(dst_id_));
  // @@protoc_insertion_point(copy_constructor:results.Edge)
}

void Edge::SharedCtor() {
  ::memset(&label_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_id_) -
      reinterpret_cast<char*>(&label_)) + sizeof(dst_id_));
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:results.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
  if (this != internal_default_instance()) delete label_;
  if (this != internal_default_instance()) delete src_label_;
  if (this != internal_default_instance()) delete dst_label_;
}

void Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Edge::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Edge& Edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Edge.base);
  return *internal_default_instance();
}


void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
  if (GetArenaNoVirtual() == NULL && src_label_ != NULL) {
    delete src_label_;
  }
  src_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && dst_label_ != NULL) {
    delete dst_label_;
  }
  dst_label_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(dst_id_));
  _internal_metadata_.Clear();
}

bool Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.NameOrId label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 src_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.NameOrId src_label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 dst_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dst_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.NameOrId dst_label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dst_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .results.Property properties = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Edge)
  return false;
#undef DO_
}

void Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_label(), output);
  }

  // int64 src_id = 3;
  if (this->src_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->src_id(), output);
  }

  // .common.NameOrId src_label = 4;
  if (this->has_src_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_src_label(), output);
  }

  // int64 dst_id = 5;
  if (this->dst_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->dst_id(), output);
  }

  // .common.NameOrId dst_label = 6;
  if (this->has_dst_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_dst_label(), output);
  }

  // repeated .results.Property properties = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Edge)
}

::google::protobuf::uint8* Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_label(), deterministic, target);
  }

  // int64 src_id = 3;
  if (this->src_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->src_id(), target);
  }

  // .common.NameOrId src_label = 4;
  if (this->has_src_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_src_label(), deterministic, target);
  }

  // int64 dst_id = 5;
  if (this->dst_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->dst_id(), target);
  }

  // .common.NameOrId dst_label = 6;
  if (this->has_dst_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_dst_label(), deterministic, target);
  }

  // repeated .results.Property properties = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Edge)
  return target;
}

size_t Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Edge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.Property properties = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  // .common.NameOrId label = 2;
  if (this->has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *label_);
  }

  // .common.NameOrId src_label = 4;
  if (this->has_src_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_label_);
  }

  // .common.NameOrId dst_label = 6;
  if (this->has_dst_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dst_label_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 src_id = 3;
  if (this->src_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->src_id());
  }

  // int64 dst_id = 5;
  if (this->dst_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dst_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_label()) {
    mutable_label()->::common::NameOrId::MergeFrom(from.label());
  }
  if (from.has_src_label()) {
    mutable_src_label()->::common::NameOrId::MergeFrom(from.src_label());
  }
  if (from.has_dst_label()) {
    mutable_dst_label()->::common::NameOrId::MergeFrom(from.dst_label());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.src_id() != 0) {
    set_src_id(from.src_id());
  }
  if (from.dst_id() != 0) {
    set_dst_id(from.dst_id());
  }
}

void Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  return true;
}

void Edge::Swap(Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edge::InternalSwap(Edge* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  swap(label_, other->label_);
  swap(src_label_, other->src_label_);
  swap(dst_label_, other->dst_label_);
  swap(id_, other->id_);
  swap(src_id_, other->src_id_);
  swap(dst_id_, other->dst_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Edge::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPath_VertexOrEdge::InitAsDefaultInstance() {
  ::results::_GraphPath_VertexOrEdge_default_instance_.vertex_ = const_cast< ::results::Vertex*>(
      ::results::Vertex::internal_default_instance());
  ::results::_GraphPath_VertexOrEdge_default_instance_.edge_ = const_cast< ::results::Edge*>(
      ::results::Edge::internal_default_instance());
}
void GraphPath_VertexOrEdge::set_allocated_vertex(::results::Vertex* vertex) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (vertex) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vertex = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vertex, submessage_arena);
    }
    set_has_vertex();
    inner_.vertex_ = vertex;
  }
  // @@protoc_insertion_point(field_set_allocated:results.GraphPath.VertexOrEdge.vertex)
}
void GraphPath_VertexOrEdge::set_allocated_edge(::results::Edge* edge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (edge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      edge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, edge, submessage_arena);
    }
    set_has_edge();
    inner_.edge_ = edge;
  }
  // @@protoc_insertion_point(field_set_allocated:results.GraphPath.VertexOrEdge.edge)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPath_VertexOrEdge::kVertexFieldNumber;
const int GraphPath_VertexOrEdge::kEdgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPath_VertexOrEdge::GraphPath_VertexOrEdge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_GraphPath_VertexOrEdge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.GraphPath.VertexOrEdge)
}
GraphPath_VertexOrEdge::GraphPath_VertexOrEdge(const GraphPath_VertexOrEdge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_inner();
  switch (from.inner_case()) {
    case kVertex: {
      mutable_vertex()->::results::Vertex::MergeFrom(from.vertex());
      break;
    }
    case kEdge: {
      mutable_edge()->::results::Edge::MergeFrom(from.edge());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:results.GraphPath.VertexOrEdge)
}

void GraphPath_VertexOrEdge::SharedCtor() {
  clear_has_inner();
}

GraphPath_VertexOrEdge::~GraphPath_VertexOrEdge() {
  // @@protoc_insertion_point(destructor:results.GraphPath.VertexOrEdge)
  SharedDtor();
}

void GraphPath_VertexOrEdge::SharedDtor() {
  if (has_inner()) {
    clear_inner();
  }
}

void GraphPath_VertexOrEdge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPath_VertexOrEdge::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPath_VertexOrEdge& GraphPath_VertexOrEdge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_GraphPath_VertexOrEdge.base);
  return *internal_default_instance();
}


void GraphPath_VertexOrEdge::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:results.GraphPath.VertexOrEdge)
  switch (inner_case()) {
    case kVertex: {
      delete inner_.vertex_;
      break;
    }
    case kEdge: {
      delete inner_.edge_;
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INNER_NOT_SET;
}


void GraphPath_VertexOrEdge::Clear() {
// @@protoc_insertion_point(message_clear_start:results.GraphPath.VertexOrEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_inner();
  _internal_metadata_.Clear();
}

bool GraphPath_VertexOrEdge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.GraphPath.VertexOrEdge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .results.Vertex vertex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vertex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .results.Edge edge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_edge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.GraphPath.VertexOrEdge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.GraphPath.VertexOrEdge)
  return false;
#undef DO_
}

void GraphPath_VertexOrEdge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.GraphPath.VertexOrEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Vertex vertex = 1;
  if (has_vertex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_vertex(), output);
  }

  // .results.Edge edge = 2;
  if (has_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_edge(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.GraphPath.VertexOrEdge)
}

::google::protobuf::uint8* GraphPath_VertexOrEdge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.GraphPath.VertexOrEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Vertex vertex = 1;
  if (has_vertex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_vertex(), deterministic, target);
  }

  // .results.Edge edge = 2;
  if (has_edge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_edge(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.GraphPath.VertexOrEdge)
  return target;
}

size_t GraphPath_VertexOrEdge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.GraphPath.VertexOrEdge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (inner_case()) {
    // .results.Vertex vertex = 1;
    case kVertex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.vertex_);
      break;
    }
    // .results.Edge edge = 2;
    case kEdge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.edge_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPath_VertexOrEdge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.GraphPath.VertexOrEdge)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPath_VertexOrEdge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPath_VertexOrEdge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.GraphPath.VertexOrEdge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.GraphPath.VertexOrEdge)
    MergeFrom(*source);
  }
}

void GraphPath_VertexOrEdge::MergeFrom(const GraphPath_VertexOrEdge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.GraphPath.VertexOrEdge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.inner_case()) {
    case kVertex: {
      mutable_vertex()->::results::Vertex::MergeFrom(from.vertex());
      break;
    }
    case kEdge: {
      mutable_edge()->::results::Edge::MergeFrom(from.edge());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
}

void GraphPath_VertexOrEdge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.GraphPath.VertexOrEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPath_VertexOrEdge::CopyFrom(const GraphPath_VertexOrEdge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.GraphPath.VertexOrEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPath_VertexOrEdge::IsInitialized() const {
  return true;
}

void GraphPath_VertexOrEdge::Swap(GraphPath_VertexOrEdge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPath_VertexOrEdge::InternalSwap(GraphPath_VertexOrEdge* other) {
  using std::swap;
  swap(inner_, other->inner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPath_VertexOrEdge::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPath::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPath::GraphPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_GraphPath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.GraphPath)
}
GraphPath::GraphPath(const GraphPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:results.GraphPath)
}

void GraphPath::SharedCtor() {
}

GraphPath::~GraphPath() {
  // @@protoc_insertion_point(destructor:results.GraphPath)
  SharedDtor();
}

void GraphPath::SharedDtor() {
}

void GraphPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPath::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPath& GraphPath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_GraphPath.base);
  return *internal_default_instance();
}


void GraphPath::Clear() {
// @@protoc_insertion_point(message_clear_start:results.GraphPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  _internal_metadata_.Clear();
}

bool GraphPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.GraphPath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .results.GraphPath.VertexOrEdge path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.GraphPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.GraphPath)
  return false;
#undef DO_
}

void GraphPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.GraphPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.GraphPath.VertexOrEdge path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->path(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.GraphPath)
}

::google::protobuf::uint8* GraphPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.GraphPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.GraphPath.VertexOrEdge path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->path(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.GraphPath)
  return target;
}

size_t GraphPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.GraphPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.GraphPath.VertexOrEdge path = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.GraphPath)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.GraphPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.GraphPath)
    MergeFrom(*source);
  }
}

void GraphPath::MergeFrom(const GraphPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.GraphPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
}

void GraphPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.GraphPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPath::CopyFrom(const GraphPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.GraphPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPath::IsInitialized() const {
  return true;
}

void GraphPath::Swap(GraphPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPath::InternalSwap(GraphPath* other) {
  using std::swap;
  CastToBase(&path_)->InternalSwap(CastToBase(&other->path_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPath::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Element::InitAsDefaultInstance() {
  ::results::_Element_default_instance_.vertex_ = const_cast< ::results::Vertex*>(
      ::results::Vertex::internal_default_instance());
  ::results::_Element_default_instance_.edge_ = const_cast< ::results::Edge*>(
      ::results::Edge::internal_default_instance());
  ::results::_Element_default_instance_.graph_path_ = const_cast< ::results::GraphPath*>(
      ::results::GraphPath::internal_default_instance());
  ::results::_Element_default_instance_.object_ = const_cast< ::common::Value*>(
      ::common::Value::internal_default_instance());
}
void Element::set_allocated_vertex(::results::Vertex* vertex) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (vertex) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vertex = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vertex, submessage_arena);
    }
    set_has_vertex();
    inner_.vertex_ = vertex;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Element.vertex)
}
void Element::set_allocated_edge(::results::Edge* edge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (edge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      edge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, edge, submessage_arena);
    }
    set_has_edge();
    inner_.edge_ = edge;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Element.edge)
}
void Element::set_allocated_graph_path(::results::GraphPath* graph_path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (graph_path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graph_path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph_path, submessage_arena);
    }
    set_has_graph_path();
    inner_.graph_path_ = graph_path;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Element.graph_path)
}
void Element::set_allocated_object(::common::Value* object) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (object) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      object = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object, submessage_arena);
    }
    set_has_object();
    inner_.object_ = object;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Element.object)
}
void Element::clear_object() {
  if (has_object()) {
    delete inner_.object_;
    clear_has_inner();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Element::kVertexFieldNumber;
const int Element::kEdgeFieldNumber;
const int Element::kGraphPathFieldNumber;
const int Element::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Element::Element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Element.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Element)
}
Element::Element(const Element& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_inner();
  switch (from.inner_case()) {
    case kVertex: {
      mutable_vertex()->::results::Vertex::MergeFrom(from.vertex());
      break;
    }
    case kEdge: {
      mutable_edge()->::results::Edge::MergeFrom(from.edge());
      break;
    }
    case kGraphPath: {
      mutable_graph_path()->::results::GraphPath::MergeFrom(from.graph_path());
      break;
    }
    case kObject: {
      mutable_object()->::common::Value::MergeFrom(from.object());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:results.Element)
}

void Element::SharedCtor() {
  clear_has_inner();
}

Element::~Element() {
  // @@protoc_insertion_point(destructor:results.Element)
  SharedDtor();
}

void Element::SharedDtor() {
  if (has_inner()) {
    clear_inner();
  }
}

void Element::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Element::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Element& Element::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Element.base);
  return *internal_default_instance();
}


void Element::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:results.Element)
  switch (inner_case()) {
    case kVertex: {
      delete inner_.vertex_;
      break;
    }
    case kEdge: {
      delete inner_.edge_;
      break;
    }
    case kGraphPath: {
      delete inner_.graph_path_;
      break;
    }
    case kObject: {
      delete inner_.object_;
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INNER_NOT_SET;
}


void Element::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_inner();
  _internal_metadata_.Clear();
}

bool Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Element)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .results.Vertex vertex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vertex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .results.Edge edge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_edge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .results.GraphPath graph_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Value object = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Element)
  return false;
#undef DO_
}

void Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Vertex vertex = 1;
  if (has_vertex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_vertex(), output);
  }

  // .results.Edge edge = 2;
  if (has_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_edge(), output);
  }

  // .results.GraphPath graph_path = 3;
  if (has_graph_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_graph_path(), output);
  }

  // .common.Value object = 4;
  if (has_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_object(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Element)
}

::google::protobuf::uint8* Element::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Vertex vertex = 1;
  if (has_vertex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_vertex(), deterministic, target);
  }

  // .results.Edge edge = 2;
  if (has_edge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_edge(), deterministic, target);
  }

  // .results.GraphPath graph_path = 3;
  if (has_graph_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_graph_path(), deterministic, target);
  }

  // .common.Value object = 4;
  if (has_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_object(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Element)
  return target;
}

size_t Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Element)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (inner_case()) {
    // .results.Vertex vertex = 1;
    case kVertex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.vertex_);
      break;
    }
    // .results.Edge edge = 2;
    case kEdge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.edge_);
      break;
    }
    // .results.GraphPath graph_path = 3;
    case kGraphPath: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.graph_path_);
      break;
    }
    // .common.Value object = 4;
    case kObject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.object_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Element::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Element)
  GOOGLE_DCHECK_NE(&from, this);
  const Element* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Element>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Element)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Element)
    MergeFrom(*source);
  }
}

void Element::MergeFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Element)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.inner_case()) {
    case kVertex: {
      mutable_vertex()->::results::Vertex::MergeFrom(from.vertex());
      break;
    }
    case kEdge: {
      mutable_edge()->::results::Edge::MergeFrom(from.edge());
      break;
    }
    case kGraphPath: {
      mutable_graph_path()->::results::GraphPath::MergeFrom(from.graph_path());
      break;
    }
    case kObject: {
      mutable_object()->::common::Value::MergeFrom(from.object());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
}

void Element::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Element::CopyFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element::IsInitialized() const {
  return true;
}

void Element::Swap(Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Element::InternalSwap(Element* other) {
  using std::swap;
  swap(inner_, other->inner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Element::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Collection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Collection::kCollectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Collection::Collection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Collection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Collection)
}
Collection::Collection(const Collection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      collection_(from.collection_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:results.Collection)
}

void Collection::SharedCtor() {
}

Collection::~Collection() {
  // @@protoc_insertion_point(destructor:results.Collection)
  SharedDtor();
}

void Collection::SharedDtor() {
}

void Collection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Collection::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Collection& Collection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Collection.base);
  return *internal_default_instance();
}


void Collection::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collection_.Clear();
  _internal_metadata_.Clear();
}

bool Collection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Collection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .results.Element collection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_collection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Collection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Collection)
  return false;
#undef DO_
}

void Collection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Element collection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->collection(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Collection)
}

::google::protobuf::uint8* Collection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Element collection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->collection(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Collection)
  return target;
}

size_t Collection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Collection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.Element collection = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->collection_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->collection(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Collection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  const Collection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Collection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Collection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Collection)
    MergeFrom(*source);
  }
}

void Collection::MergeFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  collection_.MergeFrom(from.collection_);
}

void Collection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Collection::CopyFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Collection::IsInitialized() const {
  return true;
}

void Collection::Swap(Collection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Collection::InternalSwap(Collection* other) {
  using std::swap;
  CastToBase(&collection_)->InternalSwap(CastToBase(&other->collection_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Collection::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Entry::InitAsDefaultInstance() {
  ::results::_Entry_default_instance_.element_ = const_cast< ::results::Element*>(
      ::results::Element::internal_default_instance());
  ::results::_Entry_default_instance_.collection_ = const_cast< ::results::Collection*>(
      ::results::Collection::internal_default_instance());
}
void Entry::set_allocated_element(::results::Element* element) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (element) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      element = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, element, submessage_arena);
    }
    set_has_element();
    inner_.element_ = element;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Entry.element)
}
void Entry::set_allocated_collection(::results::Collection* collection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (collection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      collection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, collection, submessage_arena);
    }
    set_has_collection();
    inner_.collection_ = collection;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Entry.collection)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entry::kElementFieldNumber;
const int Entry::kCollectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entry::Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Entry)
}
Entry::Entry(const Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_inner();
  switch (from.inner_case()) {
    case kElement: {
      mutable_element()->::results::Element::MergeFrom(from.element());
      break;
    }
    case kCollection: {
      mutable_collection()->::results::Collection::MergeFrom(from.collection());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:results.Entry)
}

void Entry::SharedCtor() {
  clear_has_inner();
}

Entry::~Entry() {
  // @@protoc_insertion_point(destructor:results.Entry)
  SharedDtor();
}

void Entry::SharedDtor() {
  if (has_inner()) {
    clear_inner();
  }
}

void Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entry::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entry& Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Entry.base);
  return *internal_default_instance();
}


void Entry::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:results.Entry)
  switch (inner_case()) {
    case kElement: {
      delete inner_.element_;
      break;
    }
    case kCollection: {
      delete inner_.collection_;
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INNER_NOT_SET;
}


void Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_inner();
  _internal_metadata_.Clear();
}

bool Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .results.Element element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .results.Collection collection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_collection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Entry)
  return false;
#undef DO_
}

void Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Element element = 1;
  if (has_element()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element(), output);
  }

  // .results.Collection collection = 2;
  if (has_collection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_collection(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Entry)
}

::google::protobuf::uint8* Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Element element = 1;
  if (has_element()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element(), deterministic, target);
  }

  // .results.Collection collection = 2;
  if (has_collection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_collection(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Entry)
  return target;
}

size_t Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (inner_case()) {
    // .results.Element element = 1;
    case kElement: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.element_);
      break;
    }
    // .results.Collection collection = 2;
    case kCollection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.collection_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Entry)
    MergeFrom(*source);
  }
}

void Entry::MergeFrom(const Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.inner_case()) {
    case kElement: {
      mutable_element()->::results::Element::MergeFrom(from.element());
      break;
    }
    case kCollection: {
      mutable_collection()->::results::Collection::MergeFrom(from.collection());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
}

void Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entry::CopyFrom(const Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entry::IsInitialized() const {
  return true;
}

void Entry::Swap(Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entry::InternalSwap(Entry* other) {
  using std::swap;
  swap(inner_, other->inner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entry::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Column::InitAsDefaultInstance() {
  ::results::_Column_default_instance_._instance.get_mutable()->name_or_id_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
  ::results::_Column_default_instance_._instance.get_mutable()->entry_ = const_cast< ::results::Entry*>(
      ::results::Entry::internal_default_instance());
}
void Column::clear_name_or_id() {
  if (GetArenaNoVirtual() == NULL && name_or_id_ != NULL) {
    delete name_or_id_;
  }
  name_or_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Column::kNameOrIdFieldNumber;
const int Column::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Column::Column()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Column.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Column)
}
Column::Column(const Column& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name_or_id()) {
    name_or_id_ = new ::common::NameOrId(*from.name_or_id_);
  } else {
    name_or_id_ = NULL;
  }
  if (from.has_entry()) {
    entry_ = new ::results::Entry(*from.entry_);
  } else {
    entry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:results.Column)
}

void Column::SharedCtor() {
  ::memset(&name_or_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_) -
      reinterpret_cast<char*>(&name_or_id_)) + sizeof(entry_));
}

Column::~Column() {
  // @@protoc_insertion_point(destructor:results.Column)
  SharedDtor();
}

void Column::SharedDtor() {
  if (this != internal_default_instance()) delete name_or_id_;
  if (this != internal_default_instance()) delete entry_;
}

void Column::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Column::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Column& Column::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Column.base);
  return *internal_default_instance();
}


void Column::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_or_id_ != NULL) {
    delete name_or_id_;
  }
  name_or_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) {
    delete entry_;
  }
  entry_ = NULL;
  _internal_metadata_.Clear();
}

bool Column::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Column)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.NameOrId name_or_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name_or_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .results.Entry entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Column)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Column)
  return false;
#undef DO_
}

void Column::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId name_or_id = 1;
  if (this->has_name_or_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name_or_id(), output);
  }

  // .results.Entry entry = 2;
  if (this->has_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_entry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Column)
}

::google::protobuf::uint8* Column::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId name_or_id = 1;
  if (this->has_name_or_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name_or_id(), deterministic, target);
  }

  // .results.Entry entry = 2;
  if (this->has_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_entry(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Column)
  return target;
}

size_t Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Column)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.NameOrId name_or_id = 1;
  if (this->has_name_or_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_or_id_);
  }

  // .results.Entry entry = 2;
  if (this->has_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Column::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Column)
  GOOGLE_DCHECK_NE(&from, this);
  const Column* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Column>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Column)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Column)
    MergeFrom(*source);
  }
}

void Column::MergeFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Column)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name_or_id()) {
    mutable_name_or_id()->::common::NameOrId::MergeFrom(from.name_or_id());
  }
  if (from.has_entry()) {
    mutable_entry()->::results::Entry::MergeFrom(from.entry());
  }
}

void Column::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Column::CopyFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Column::IsInitialized() const {
  return true;
}

void Column::Swap(Column* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Column::InternalSwap(Column* other) {
  using std::swap;
  swap(name_or_id_, other->name_or_id_);
  swap(entry_, other->entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Column::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Record::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Record::kColumnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Record::Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Record.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Record)
}
Record::Record(const Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      columns_(from.columns_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:results.Record)
}

void Record::SharedCtor() {
}

Record::~Record() {
  // @@protoc_insertion_point(destructor:results.Record)
  SharedDtor();
}

void Record::SharedDtor() {
}

void Record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Record::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Record& Record::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Record.base);
  return *internal_default_instance();
}


void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columns_.Clear();
  _internal_metadata_.Clear();
}

bool Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .results.Column columns = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Record)
  return false;
#undef DO_
}

void Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Column columns = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->columns(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Record)
}

::google::protobuf::uint8* Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Column columns = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->columns(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Record)
  return target;
}

size_t Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Record)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.Column columns = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->columns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->columns(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Record)
    MergeFrom(*source);
  }
}

void Record::MergeFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
}

void Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Record::IsInitialized() const {
  return true;
}

void Record::Swap(Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Record::InternalSwap(Record* other) {
  using std::swap;
  CastToBase(&columns_)->InternalSwap(CastToBase(&other->columns_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Results::InitAsDefaultInstance() {
  ::results::_Results_default_instance_.record_ = const_cast< ::results::Record*>(
      ::results::Record::internal_default_instance());
}
void Results::set_allocated_record(::results::Record* record) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_inner();
  if (record) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      record = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, record, submessage_arena);
    }
    set_has_record();
    inner_.record_ = record;
  }
  // @@protoc_insertion_point(field_set_allocated:results.Results.record)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Results::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Results::Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_Results.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.Results)
}
Results::Results(const Results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_inner();
  switch (from.inner_case()) {
    case kRecord: {
      mutable_record()->::results::Record::MergeFrom(from.record());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:results.Results)
}

void Results::SharedCtor() {
  clear_has_inner();
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:results.Results)
  SharedDtor();
}

void Results::SharedDtor() {
  if (has_inner()) {
    clear_inner();
  }
}

void Results::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Results::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Results& Results::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_Results.base);
  return *internal_default_instance();
}


void Results::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:results.Results)
  switch (inner_case()) {
    case kRecord: {
      delete inner_.record_;
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INNER_NOT_SET;
}


void Results::Clear() {
// @@protoc_insertion_point(message_clear_start:results.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_inner();
  _internal_metadata_.Clear();
}

bool Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.Results)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .results.Record record = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.Results)
  return false;
#undef DO_
}

void Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Record record = 1;
  if (has_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.Results)
}

::google::protobuf::uint8* Results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .results.Record record = 1;
  if (has_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_record(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.Results)
  return target;
}

size_t Results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.Results)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (inner_case()) {
    // .results.Record record = 1;
    case kRecord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *inner_.record_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.Results)
  GOOGLE_DCHECK_NE(&from, this);
  const Results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.Results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.Results)
    MergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.Results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.inner_case()) {
    case kRecord: {
      mutable_record()->::results::Record::MergeFrom(from.record());
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
}

void Results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Results::IsInitialized() const {
  return true;
}

void Results::Swap(Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Results::InternalSwap(Results* other) {
  using std::swap;
  swap(inner_, other->inner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Results::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CollectiveResults::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectiveResults::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectiveResults::CollectiveResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_results_2eproto::scc_info_CollectiveResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:results.CollectiveResults)
}
CollectiveResults::CollectiveResults(const CollectiveResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:results.CollectiveResults)
}

void CollectiveResults::SharedCtor() {
}

CollectiveResults::~CollectiveResults() {
  // @@protoc_insertion_point(destructor:results.CollectiveResults)
  SharedDtor();
}

void CollectiveResults::SharedDtor() {
}

void CollectiveResults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CollectiveResults::descriptor() {
  ::protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CollectiveResults& CollectiveResults::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_results_2eproto::scc_info_CollectiveResults.base);
  return *internal_default_instance();
}


void CollectiveResults::Clear() {
// @@protoc_insertion_point(message_clear_start:results.CollectiveResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool CollectiveResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:results.CollectiveResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .results.Results results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:results.CollectiveResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:results.CollectiveResults)
  return false;
#undef DO_
}

void CollectiveResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:results.CollectiveResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Results results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:results.CollectiveResults)
}

::google::protobuf::uint8* CollectiveResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:results.CollectiveResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .results.Results results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:results.CollectiveResults)
  return target;
}

size_t CollectiveResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:results.CollectiveResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .results.Results results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CollectiveResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:results.CollectiveResults)
  GOOGLE_DCHECK_NE(&from, this);
  const CollectiveResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectiveResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:results.CollectiveResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:results.CollectiveResults)
    MergeFrom(*source);
  }
}

void CollectiveResults::MergeFrom(const CollectiveResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:results.CollectiveResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void CollectiveResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:results.CollectiveResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectiveResults::CopyFrom(const CollectiveResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:results.CollectiveResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectiveResults::IsInitialized() const {
  return true;
}

void CollectiveResults::Swap(CollectiveResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectiveResults::InternalSwap(CollectiveResults* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CollectiveResults::GetMetadata() const {
  protobuf_results_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_results_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace results
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Property* Arena::CreateMaybeMessage< ::results::Property >(Arena* arena) {
  return Arena::CreateInternal< ::results::Property >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Vertex* Arena::CreateMaybeMessage< ::results::Vertex >(Arena* arena) {
  return Arena::CreateInternal< ::results::Vertex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Edge* Arena::CreateMaybeMessage< ::results::Edge >(Arena* arena) {
  return Arena::CreateInternal< ::results::Edge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::GraphPath_VertexOrEdge* Arena::CreateMaybeMessage< ::results::GraphPath_VertexOrEdge >(Arena* arena) {
  return Arena::CreateInternal< ::results::GraphPath_VertexOrEdge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::GraphPath* Arena::CreateMaybeMessage< ::results::GraphPath >(Arena* arena) {
  return Arena::CreateInternal< ::results::GraphPath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Element* Arena::CreateMaybeMessage< ::results::Element >(Arena* arena) {
  return Arena::CreateInternal< ::results::Element >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Collection* Arena::CreateMaybeMessage< ::results::Collection >(Arena* arena) {
  return Arena::CreateInternal< ::results::Collection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Entry* Arena::CreateMaybeMessage< ::results::Entry >(Arena* arena) {
  return Arena::CreateInternal< ::results::Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Column* Arena::CreateMaybeMessage< ::results::Column >(Arena* arena) {
  return Arena::CreateInternal< ::results::Column >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Record* Arena::CreateMaybeMessage< ::results::Record >(Arena* arena) {
  return Arena::CreateInternal< ::results::Record >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::Results* Arena::CreateMaybeMessage< ::results::Results >(Arena* arena) {
  return Arena::CreateInternal< ::results::Results >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::results::CollectiveResults* Arena::CreateMaybeMessage< ::results::CollectiveResults >(Arena* arena) {
  return Arena::CreateInternal< ::results::CollectiveResults >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
