// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

#include "type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NameOrId;
}  // namespace protobuf_common_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_type_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_type_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_type_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType_GraphElementLabel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_type_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType_GraphElementTypeField;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_type_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GraphDataType_GraphElementType;
}  // namespace protobuf_type_2eproto
namespace common {
class GraphDataType_GraphElementLabelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphDataType_GraphElementLabel>
      _instance;
} _GraphDataType_GraphElementLabel_default_instance_;
class GraphDataType_GraphElementTypeFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphDataType_GraphElementTypeField>
      _instance;
} _GraphDataType_GraphElementTypeField_default_instance_;
class GraphDataType_GraphElementTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphDataType_GraphElementType>
      _instance;
} _GraphDataType_GraphElementType_default_instance_;
class GraphDataTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphDataType>
      _instance;
} _GraphDataType_default_instance_;
class IrDataTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IrDataType>
      _instance;
  int data_type_;
  const ::common::GraphDataType* graph_type_;
} _IrDataType_default_instance_;
}  // namespace common
namespace protobuf_type_2eproto {
static void InitDefaultsGraphDataType_GraphElementLabel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_GraphDataType_GraphElementLabel_default_instance_;
    new (ptr) ::common::GraphDataType_GraphElementLabel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::GraphDataType_GraphElementLabel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType_GraphElementLabel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphDataType_GraphElementLabel}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int32Value.base,}};

static void InitDefaultsGraphDataType_GraphElementTypeField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_GraphDataType_GraphElementTypeField_default_instance_;
    new (ptr) ::common::GraphDataType_GraphElementTypeField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::GraphDataType_GraphElementTypeField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType_GraphElementTypeField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphDataType_GraphElementTypeField}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,}};

static void InitDefaultsGraphDataType_GraphElementType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_GraphDataType_GraphElementType_default_instance_;
    new (ptr) ::common::GraphDataType_GraphElementType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::GraphDataType_GraphElementType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GraphDataType_GraphElementType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGraphDataType_GraphElementType}, {
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementLabel.base,
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementTypeField.base,}};

static void InitDefaultsGraphDataType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_GraphDataType_default_instance_;
    new (ptr) ::common::GraphDataType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::GraphDataType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GraphDataType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGraphDataType}, {
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementType.base,}};

static void InitDefaultsIrDataType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_IrDataType_default_instance_;
    new (ptr) ::common::IrDataType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::IrDataType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IrDataType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIrDataType}, {
      &protobuf_type_2eproto::scc_info_GraphDataType.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GraphDataType_GraphElementLabel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphDataType_GraphElementTypeField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphDataType_GraphElementType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphDataType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IrDataType.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementLabel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementLabel, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementLabel, src_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementLabel, dst_label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementTypeField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementTypeField, prop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementTypeField, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementType, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType_GraphElementType, props_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType, element_opt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::GraphDataType, graph_data_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::IrDataType, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::IrDataType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::common::IrDataTypeDefaultTypeInternal, data_type_),
  offsetof(::common::IrDataTypeDefaultTypeInternal, graph_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::IrDataType, type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::GraphDataType_GraphElementLabel)},
  { 8, -1, sizeof(::common::GraphDataType_GraphElementTypeField)},
  { 15, -1, sizeof(::common::GraphDataType_GraphElementType)},
  { 22, -1, sizeof(::common::GraphDataType)},
  { 29, -1, sizeof(::common::IrDataType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_GraphDataType_GraphElementLabel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_GraphDataType_GraphElementTypeField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_GraphDataType_GraphElementType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_GraphDataType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_IrDataType_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "type.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntype.proto\022\006common\032\014common.proto\032\036goog"
      "le/protobuf/wrappers.proto\"\237\004\n\rGraphData"
      "Type\022:\n\013element_opt\030\001 \001(\0162%.common.Graph"
      "DataType.GraphElementOpt\022\?\n\017graph_data_t"
      "ype\030\002 \003(\0132&.common.GraphDataType.GraphEl"
      "ementType\032\202\001\n\021GraphElementLabel\022\r\n\005label"
      "\030\001 \001(\005\022.\n\tsrc_label\030\002 \001(\0132\033.google.proto"
      "buf.Int32Value\022.\n\tdst_label\030\003 \001(\0132\033.goog"
      "le.protobuf.Int32Value\032Z\n\025GraphElementTy"
      "peField\022!\n\007prop_id\030\001 \001(\0132\020.common.NameOr"
      "Id\022\036\n\004type\030\002 \001(\0162\020.common.DataType\032\206\001\n\020G"
      "raphElementType\0226\n\005label\030\001 \001(\0132\'.common."
      "GraphDataType.GraphElementLabel\022:\n\005props"
      "\030\002 \003(\0132+.common.GraphDataType.GraphEleme"
      "ntTypeField\"\'\n\017GraphElementOpt\022\n\n\006VERTEX"
      "\020\000\022\010\n\004EDGE\020\001\"h\n\nIrDataType\022%\n\tdata_type\030"
      "\001 \001(\0162\020.common.DataTypeH\000\022+\n\ngraph_type\030"
      "\002 \001(\0132\025.common.GraphDataTypeH\000B\006\n\004typeB-"
      "\n!com.alibaba.graphscope.gaia.protoB\010Dat"
      "aTypeb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 773);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "type.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_type_2eproto
namespace common {
const ::google::protobuf::EnumDescriptor* GraphDataType_GraphElementOpt_descriptor() {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_type_2eproto::file_level_enum_descriptors[0];
}
bool GraphDataType_GraphElementOpt_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GraphDataType_GraphElementOpt GraphDataType::VERTEX;
const GraphDataType_GraphElementOpt GraphDataType::EDGE;
const GraphDataType_GraphElementOpt GraphDataType::GraphElementOpt_MIN;
const GraphDataType_GraphElementOpt GraphDataType::GraphElementOpt_MAX;
const int GraphDataType::GraphElementOpt_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GraphDataType_GraphElementLabel::InitAsDefaultInstance() {
  ::common::_GraphDataType_GraphElementLabel_default_instance_._instance.get_mutable()->src_label_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::common::_GraphDataType_GraphElementLabel_default_instance_._instance.get_mutable()->dst_label_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
void GraphDataType_GraphElementLabel::clear_src_label() {
  if (GetArenaNoVirtual() == NULL && src_label_ != NULL) {
    delete src_label_;
  }
  src_label_ = NULL;
}
void GraphDataType_GraphElementLabel::clear_dst_label() {
  if (GetArenaNoVirtual() == NULL && dst_label_ != NULL) {
    delete dst_label_;
  }
  dst_label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphDataType_GraphElementLabel::kLabelFieldNumber;
const int GraphDataType_GraphElementLabel::kSrcLabelFieldNumber;
const int GraphDataType_GraphElementLabel::kDstLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphDataType_GraphElementLabel::GraphDataType_GraphElementLabel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementLabel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.GraphDataType.GraphElementLabel)
}
GraphDataType_GraphElementLabel::GraphDataType_GraphElementLabel(const GraphDataType_GraphElementLabel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src_label()) {
    src_label_ = new ::google::protobuf::Int32Value(*from.src_label_);
  } else {
    src_label_ = NULL;
  }
  if (from.has_dst_label()) {
    dst_label_ = new ::google::protobuf::Int32Value(*from.dst_label_);
  } else {
    dst_label_ = NULL;
  }
  label_ = from.label_;
  // @@protoc_insertion_point(copy_constructor:common.GraphDataType.GraphElementLabel)
}

void GraphDataType_GraphElementLabel::SharedCtor() {
  ::memset(&src_label_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_) -
      reinterpret_cast<char*>(&src_label_)) + sizeof(label_));
}

GraphDataType_GraphElementLabel::~GraphDataType_GraphElementLabel() {
  // @@protoc_insertion_point(destructor:common.GraphDataType.GraphElementLabel)
  SharedDtor();
}

void GraphDataType_GraphElementLabel::SharedDtor() {
  if (this != internal_default_instance()) delete src_label_;
  if (this != internal_default_instance()) delete dst_label_;
}

void GraphDataType_GraphElementLabel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphDataType_GraphElementLabel::descriptor() {
  ::protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphDataType_GraphElementLabel& GraphDataType_GraphElementLabel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_type_2eproto::scc_info_GraphDataType_GraphElementLabel.base);
  return *internal_default_instance();
}


void GraphDataType_GraphElementLabel::Clear() {
// @@protoc_insertion_point(message_clear_start:common.GraphDataType.GraphElementLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && src_label_ != NULL) {
    delete src_label_;
  }
  src_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && dst_label_ != NULL) {
    delete dst_label_;
  }
  dst_label_ = NULL;
  label_ = 0;
  _internal_metadata_.Clear();
}

bool GraphDataType_GraphElementLabel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.GraphDataType.GraphElementLabel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value src_label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value dst_label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dst_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.GraphDataType.GraphElementLabel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.GraphDataType.GraphElementLabel)
  return false;
#undef DO_
}

void GraphDataType_GraphElementLabel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.GraphDataType.GraphElementLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 label = 1;
  if (this->label() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label(), output);
  }

  // .google.protobuf.Int32Value src_label = 2;
  if (this->has_src_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_src_label(), output);
  }

  // .google.protobuf.Int32Value dst_label = 3;
  if (this->has_dst_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_dst_label(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.GraphDataType.GraphElementLabel)
}

::google::protobuf::uint8* GraphDataType_GraphElementLabel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.GraphDataType.GraphElementLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 label = 1;
  if (this->label() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label(), target);
  }

  // .google.protobuf.Int32Value src_label = 2;
  if (this->has_src_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_src_label(), deterministic, target);
  }

  // .google.protobuf.Int32Value dst_label = 3;
  if (this->has_dst_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_dst_label(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.GraphDataType.GraphElementLabel)
  return target;
}

size_t GraphDataType_GraphElementLabel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.GraphDataType.GraphElementLabel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int32Value src_label = 2;
  if (this->has_src_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_label_);
  }

  // .google.protobuf.Int32Value dst_label = 3;
  if (this->has_dst_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dst_label_);
  }

  // int32 label = 1;
  if (this->label() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphDataType_GraphElementLabel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.GraphDataType.GraphElementLabel)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphDataType_GraphElementLabel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphDataType_GraphElementLabel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.GraphDataType.GraphElementLabel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.GraphDataType.GraphElementLabel)
    MergeFrom(*source);
  }
}

void GraphDataType_GraphElementLabel::MergeFrom(const GraphDataType_GraphElementLabel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.GraphDataType.GraphElementLabel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_src_label()) {
    mutable_src_label()->::google::protobuf::Int32Value::MergeFrom(from.src_label());
  }
  if (from.has_dst_label()) {
    mutable_dst_label()->::google::protobuf::Int32Value::MergeFrom(from.dst_label());
  }
  if (from.label() != 0) {
    set_label(from.label());
  }
}

void GraphDataType_GraphElementLabel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.GraphDataType.GraphElementLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphDataType_GraphElementLabel::CopyFrom(const GraphDataType_GraphElementLabel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.GraphDataType.GraphElementLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDataType_GraphElementLabel::IsInitialized() const {
  return true;
}

void GraphDataType_GraphElementLabel::Swap(GraphDataType_GraphElementLabel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphDataType_GraphElementLabel::InternalSwap(GraphDataType_GraphElementLabel* other) {
  using std::swap;
  swap(src_label_, other->src_label_);
  swap(dst_label_, other->dst_label_);
  swap(label_, other->label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphDataType_GraphElementLabel::GetMetadata() const {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphDataType_GraphElementTypeField::InitAsDefaultInstance() {
  ::common::_GraphDataType_GraphElementTypeField_default_instance_._instance.get_mutable()->prop_id_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
}
void GraphDataType_GraphElementTypeField::clear_prop_id() {
  if (GetArenaNoVirtual() == NULL && prop_id_ != NULL) {
    delete prop_id_;
  }
  prop_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphDataType_GraphElementTypeField::kPropIdFieldNumber;
const int GraphDataType_GraphElementTypeField::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphDataType_GraphElementTypeField::GraphDataType_GraphElementTypeField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementTypeField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.GraphDataType.GraphElementTypeField)
}
GraphDataType_GraphElementTypeField::GraphDataType_GraphElementTypeField(const GraphDataType_GraphElementTypeField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prop_id()) {
    prop_id_ = new ::common::NameOrId(*from.prop_id_);
  } else {
    prop_id_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:common.GraphDataType.GraphElementTypeField)
}

void GraphDataType_GraphElementTypeField::SharedCtor() {
  ::memset(&prop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&prop_id_)) + sizeof(type_));
}

GraphDataType_GraphElementTypeField::~GraphDataType_GraphElementTypeField() {
  // @@protoc_insertion_point(destructor:common.GraphDataType.GraphElementTypeField)
  SharedDtor();
}

void GraphDataType_GraphElementTypeField::SharedDtor() {
  if (this != internal_default_instance()) delete prop_id_;
}

void GraphDataType_GraphElementTypeField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphDataType_GraphElementTypeField::descriptor() {
  ::protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphDataType_GraphElementTypeField& GraphDataType_GraphElementTypeField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_type_2eproto::scc_info_GraphDataType_GraphElementTypeField.base);
  return *internal_default_instance();
}


void GraphDataType_GraphElementTypeField::Clear() {
// @@protoc_insertion_point(message_clear_start:common.GraphDataType.GraphElementTypeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && prop_id_ != NULL) {
    delete prop_id_;
  }
  prop_id_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool GraphDataType_GraphElementTypeField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.GraphDataType.GraphElementTypeField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.NameOrId prop_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prop_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.DataType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::common::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.GraphDataType.GraphElementTypeField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.GraphDataType.GraphElementTypeField)
  return false;
#undef DO_
}

void GraphDataType_GraphElementTypeField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.GraphDataType.GraphElementTypeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId prop_id = 1;
  if (this->has_prop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prop_id(), output);
  }

  // .common.DataType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.GraphDataType.GraphElementTypeField)
}

::google::protobuf::uint8* GraphDataType_GraphElementTypeField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.GraphDataType.GraphElementTypeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId prop_id = 1;
  if (this->has_prop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prop_id(), deterministic, target);
  }

  // .common.DataType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.GraphDataType.GraphElementTypeField)
  return target;
}

size_t GraphDataType_GraphElementTypeField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.GraphDataType.GraphElementTypeField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.NameOrId prop_id = 1;
  if (this->has_prop_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prop_id_);
  }

  // .common.DataType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphDataType_GraphElementTypeField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.GraphDataType.GraphElementTypeField)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphDataType_GraphElementTypeField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphDataType_GraphElementTypeField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.GraphDataType.GraphElementTypeField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.GraphDataType.GraphElementTypeField)
    MergeFrom(*source);
  }
}

void GraphDataType_GraphElementTypeField::MergeFrom(const GraphDataType_GraphElementTypeField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.GraphDataType.GraphElementTypeField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prop_id()) {
    mutable_prop_id()->::common::NameOrId::MergeFrom(from.prop_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GraphDataType_GraphElementTypeField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.GraphDataType.GraphElementTypeField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphDataType_GraphElementTypeField::CopyFrom(const GraphDataType_GraphElementTypeField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.GraphDataType.GraphElementTypeField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDataType_GraphElementTypeField::IsInitialized() const {
  return true;
}

void GraphDataType_GraphElementTypeField::Swap(GraphDataType_GraphElementTypeField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphDataType_GraphElementTypeField::InternalSwap(GraphDataType_GraphElementTypeField* other) {
  using std::swap;
  swap(prop_id_, other->prop_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphDataType_GraphElementTypeField::GetMetadata() const {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphDataType_GraphElementType::InitAsDefaultInstance() {
  ::common::_GraphDataType_GraphElementType_default_instance_._instance.get_mutable()->label_ = const_cast< ::common::GraphDataType_GraphElementLabel*>(
      ::common::GraphDataType_GraphElementLabel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphDataType_GraphElementType::kLabelFieldNumber;
const int GraphDataType_GraphElementType::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphDataType_GraphElementType::GraphDataType_GraphElementType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_type_2eproto::scc_info_GraphDataType_GraphElementType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.GraphDataType.GraphElementType)
}
GraphDataType_GraphElementType::GraphDataType_GraphElementType(const GraphDataType_GraphElementType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      props_(from.props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_label()) {
    label_ = new ::common::GraphDataType_GraphElementLabel(*from.label_);
  } else {
    label_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.GraphDataType.GraphElementType)
}

void GraphDataType_GraphElementType::SharedCtor() {
  label_ = NULL;
}

GraphDataType_GraphElementType::~GraphDataType_GraphElementType() {
  // @@protoc_insertion_point(destructor:common.GraphDataType.GraphElementType)
  SharedDtor();
}

void GraphDataType_GraphElementType::SharedDtor() {
  if (this != internal_default_instance()) delete label_;
}

void GraphDataType_GraphElementType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphDataType_GraphElementType::descriptor() {
  ::protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphDataType_GraphElementType& GraphDataType_GraphElementType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_type_2eproto::scc_info_GraphDataType_GraphElementType.base);
  return *internal_default_instance();
}


void GraphDataType_GraphElementType::Clear() {
// @@protoc_insertion_point(message_clear_start:common.GraphDataType.GraphElementType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
  _internal_metadata_.Clear();
}

bool GraphDataType_GraphElementType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.GraphDataType.GraphElementType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.GraphDataType.GraphElementLabel label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.GraphDataType.GraphElementTypeField props = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.GraphDataType.GraphElementType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.GraphDataType.GraphElementType)
  return false;
#undef DO_
}

void GraphDataType_GraphElementType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.GraphDataType.GraphElementType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.GraphDataType.GraphElementLabel label = 1;
  if (this->has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_label(), output);
  }

  // repeated .common.GraphDataType.GraphElementTypeField props = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->props(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.GraphDataType.GraphElementType)
}

::google::protobuf::uint8* GraphDataType_GraphElementType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.GraphDataType.GraphElementType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.GraphDataType.GraphElementLabel label = 1;
  if (this->has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_label(), deterministic, target);
  }

  // repeated .common.GraphDataType.GraphElementTypeField props = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->props(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.GraphDataType.GraphElementType)
  return target;
}

size_t GraphDataType_GraphElementType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.GraphDataType.GraphElementType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.GraphDataType.GraphElementTypeField props = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->props(static_cast<int>(i)));
    }
  }

  // .common.GraphDataType.GraphElementLabel label = 1;
  if (this->has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *label_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphDataType_GraphElementType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.GraphDataType.GraphElementType)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphDataType_GraphElementType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphDataType_GraphElementType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.GraphDataType.GraphElementType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.GraphDataType.GraphElementType)
    MergeFrom(*source);
  }
}

void GraphDataType_GraphElementType::MergeFrom(const GraphDataType_GraphElementType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.GraphDataType.GraphElementType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
  if (from.has_label()) {
    mutable_label()->::common::GraphDataType_GraphElementLabel::MergeFrom(from.label());
  }
}

void GraphDataType_GraphElementType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.GraphDataType.GraphElementType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphDataType_GraphElementType::CopyFrom(const GraphDataType_GraphElementType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.GraphDataType.GraphElementType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDataType_GraphElementType::IsInitialized() const {
  return true;
}

void GraphDataType_GraphElementType::Swap(GraphDataType_GraphElementType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphDataType_GraphElementType::InternalSwap(GraphDataType_GraphElementType* other) {
  using std::swap;
  CastToBase(&props_)->InternalSwap(CastToBase(&other->props_));
  swap(label_, other->label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphDataType_GraphElementType::GetMetadata() const {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphDataType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphDataType::kElementOptFieldNumber;
const int GraphDataType::kGraphDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphDataType::GraphDataType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_type_2eproto::scc_info_GraphDataType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.GraphDataType)
}
GraphDataType::GraphDataType(const GraphDataType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      graph_data_type_(from.graph_data_type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_opt_ = from.element_opt_;
  // @@protoc_insertion_point(copy_constructor:common.GraphDataType)
}

void GraphDataType::SharedCtor() {
  element_opt_ = 0;
}

GraphDataType::~GraphDataType() {
  // @@protoc_insertion_point(destructor:common.GraphDataType)
  SharedDtor();
}

void GraphDataType::SharedDtor() {
}

void GraphDataType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphDataType::descriptor() {
  ::protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphDataType& GraphDataType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_type_2eproto::scc_info_GraphDataType.base);
  return *internal_default_instance();
}


void GraphDataType::Clear() {
// @@protoc_insertion_point(message_clear_start:common.GraphDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_data_type_.Clear();
  element_opt_ = 0;
  _internal_metadata_.Clear();
}

bool GraphDataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.GraphDataType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.GraphDataType.GraphElementOpt element_opt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_element_opt(static_cast< ::common::GraphDataType_GraphElementOpt >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.GraphDataType.GraphElementType graph_data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_graph_data_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.GraphDataType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.GraphDataType)
  return false;
#undef DO_
}

void GraphDataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.GraphDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.GraphDataType.GraphElementOpt element_opt = 1;
  if (this->element_opt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->element_opt(), output);
  }

  // repeated .common.GraphDataType.GraphElementType graph_data_type = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->graph_data_type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->graph_data_type(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.GraphDataType)
}

::google::protobuf::uint8* GraphDataType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.GraphDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.GraphDataType.GraphElementOpt element_opt = 1;
  if (this->element_opt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->element_opt(), target);
  }

  // repeated .common.GraphDataType.GraphElementType graph_data_type = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->graph_data_type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->graph_data_type(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.GraphDataType)
  return target;
}

size_t GraphDataType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.GraphDataType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.GraphDataType.GraphElementType graph_data_type = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->graph_data_type_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->graph_data_type(static_cast<int>(i)));
    }
  }

  // .common.GraphDataType.GraphElementOpt element_opt = 1;
  if (this->element_opt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->element_opt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphDataType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.GraphDataType)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphDataType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphDataType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.GraphDataType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.GraphDataType)
    MergeFrom(*source);
  }
}

void GraphDataType::MergeFrom(const GraphDataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.GraphDataType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  graph_data_type_.MergeFrom(from.graph_data_type_);
  if (from.element_opt() != 0) {
    set_element_opt(from.element_opt());
  }
}

void GraphDataType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.GraphDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphDataType::CopyFrom(const GraphDataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.GraphDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDataType::IsInitialized() const {
  return true;
}

void GraphDataType::Swap(GraphDataType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphDataType::InternalSwap(GraphDataType* other) {
  using std::swap;
  CastToBase(&graph_data_type_)->InternalSwap(CastToBase(&other->graph_data_type_));
  swap(element_opt_, other->element_opt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphDataType::GetMetadata() const {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IrDataType::InitAsDefaultInstance() {
  ::common::_IrDataType_default_instance_.data_type_ = 0;
  ::common::_IrDataType_default_instance_.graph_type_ = const_cast< ::common::GraphDataType*>(
      ::common::GraphDataType::internal_default_instance());
}
void IrDataType::set_allocated_graph_type(::common::GraphDataType* graph_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (graph_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graph_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph_type, submessage_arena);
    }
    set_has_graph_type();
    type_.graph_type_ = graph_type;
  }
  // @@protoc_insertion_point(field_set_allocated:common.IrDataType.graph_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IrDataType::kDataTypeFieldNumber;
const int IrDataType::kGraphTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IrDataType::IrDataType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_type_2eproto::scc_info_IrDataType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.IrDataType)
}
IrDataType::IrDataType(const IrDataType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kDataType: {
      set_data_type(from.data_type());
      break;
    }
    case kGraphType: {
      mutable_graph_type()->::common::GraphDataType::MergeFrom(from.graph_type());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.IrDataType)
}

void IrDataType::SharedCtor() {
  clear_has_type();
}

IrDataType::~IrDataType() {
  // @@protoc_insertion_point(destructor:common.IrDataType)
  SharedDtor();
}

void IrDataType::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void IrDataType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IrDataType::descriptor() {
  ::protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IrDataType& IrDataType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_type_2eproto::scc_info_IrDataType.base);
  return *internal_default_instance();
}


void IrDataType::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:common.IrDataType)
  switch (type_case()) {
    case kDataType: {
      // No need to clear
      break;
    }
    case kGraphType: {
      delete type_.graph_type_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void IrDataType::Clear() {
// @@protoc_insertion_point(message_clear_start:common.IrDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool IrDataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.IrDataType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.DataType data_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_type(static_cast< ::common::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.GraphDataType graph_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.IrDataType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.IrDataType)
  return false;
#undef DO_
}

void IrDataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.IrDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.DataType data_type = 1;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data_type(), output);
  }

  // .common.GraphDataType graph_type = 2;
  if (has_graph_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_graph_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.IrDataType)
}

::google::protobuf::uint8* IrDataType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.IrDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.DataType data_type = 1;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->data_type(), target);
  }

  // .common.GraphDataType graph_type = 2;
  if (has_graph_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_graph_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.IrDataType)
  return target;
}

size_t IrDataType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.IrDataType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .common.DataType data_type = 1;
    case kDataType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
      break;
    }
    // .common.GraphDataType graph_type = 2;
    case kGraphType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.graph_type_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IrDataType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.IrDataType)
  GOOGLE_DCHECK_NE(&from, this);
  const IrDataType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IrDataType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.IrDataType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.IrDataType)
    MergeFrom(*source);
  }
}

void IrDataType::MergeFrom(const IrDataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.IrDataType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kDataType: {
      set_data_type(from.data_type());
      break;
    }
    case kGraphType: {
      mutable_graph_type()->::common::GraphDataType::MergeFrom(from.graph_type());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void IrDataType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.IrDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IrDataType::CopyFrom(const IrDataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.IrDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrDataType::IsInitialized() const {
  return true;
}

void IrDataType::Swap(IrDataType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IrDataType::InternalSwap(IrDataType* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IrDataType::GetMetadata() const {
  protobuf_type_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_type_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::GraphDataType_GraphElementLabel* Arena::CreateMaybeMessage< ::common::GraphDataType_GraphElementLabel >(Arena* arena) {
  return Arena::CreateInternal< ::common::GraphDataType_GraphElementLabel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::GraphDataType_GraphElementTypeField* Arena::CreateMaybeMessage< ::common::GraphDataType_GraphElementTypeField >(Arena* arena) {
  return Arena::CreateInternal< ::common::GraphDataType_GraphElementTypeField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::GraphDataType_GraphElementType* Arena::CreateMaybeMessage< ::common::GraphDataType_GraphElementType >(Arena* arena) {
  return Arena::CreateInternal< ::common::GraphDataType_GraphElementType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::GraphDataType* Arena::CreateMaybeMessage< ::common::GraphDataType >(Arena* arena) {
  return Arena::CreateInternal< ::common::GraphDataType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::IrDataType* Arena::CreateMaybeMessage< ::common::IrDataType >(Arena* arena) {
  return Arena::CreateInternal< ::common::IrDataType >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
