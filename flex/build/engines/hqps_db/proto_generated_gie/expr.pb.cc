// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expr.proto

#include "expr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NameOrId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Pair;
}  // namespace protobuf_common_2eproto
namespace protobuf_expr_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AllKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IdKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LengthKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DynamicParam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VariableKeys;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Variable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Case;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_expr_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Property;
}  // namespace protobuf_expr_2eproto
namespace protobuf_type_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_type_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IrDataType;
}  // namespace protobuf_type_2eproto
namespace common {
class IdKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdKey>
      _instance;
} _IdKey_default_instance_;
class LabelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabelKey>
      _instance;
} _LabelKey_default_instance_;
class LengthKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LengthKey>
      _instance;
} _LengthKey_default_instance_;
class AllKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllKey>
      _instance;
} _AllKey_default_instance_;
class NameOrIdKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameOrIdKey>
      _instance;
} _NameOrIdKey_default_instance_;
class PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Property>
      _instance;
  const ::common::IdKey* id_;
  const ::common::LabelKey* label_;
  const ::common::LengthKey* len_;
  const ::common::AllKey* all_;
  const ::common::NameOrId* key_;
} _Property_default_instance_;
class VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Variable>
      _instance;
} _Variable_default_instance_;
class VariableKeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableKeys>
      _instance;
} _VariableKeys_default_instance_;
class DynamicParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicParam>
      _instance;
} _DynamicParam_default_instance_;
class Case_WhenThenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Case_WhenThen>
      _instance;
} _Case_WhenThen_default_instance_;
class CaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Case>
      _instance;
} _Case_default_instance_;
class ExtractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extract>
      _instance;
} _Extract_default_instance_;
class ExprOprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExprOpr>
      _instance;
  int logical_;
  int arith_;
  const ::common::Value* const__;
  const ::common::Variable* var_;
  int brace_;
  const ::common::VariableKeys* vars_;
  const ::common::VariableKeys* var_map_;
  const ::common::DynamicParam* param_;
  const ::common::Case* case__;
  const ::common::Extract* extract_;
} _ExprOpr_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
} _Expression_default_instance_;
}  // namespace common
namespace protobuf_expr_2eproto {
static void InitDefaultsIdKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_IdKey_default_instance_;
    new (ptr) ::common::IdKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::IdKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdKey}, {}};

static void InitDefaultsLabelKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_LabelKey_default_instance_;
    new (ptr) ::common::LabelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::LabelKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabelKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabelKey}, {}};

static void InitDefaultsLengthKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_LengthKey_default_instance_;
    new (ptr) ::common::LengthKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::LengthKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LengthKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLengthKey}, {}};

static void InitDefaultsAllKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_AllKey_default_instance_;
    new (ptr) ::common::AllKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::AllKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AllKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAllKey}, {}};

static void InitDefaultsNameOrIdKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_NameOrIdKey_default_instance_;
    new (ptr) ::common::NameOrIdKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::NameOrIdKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NameOrIdKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNameOrIdKey}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,}};

static void InitDefaultsProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Property_default_instance_;
    new (ptr) ::common::Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Property::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Property =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsProperty}, {
      &protobuf_expr_2eproto::scc_info_IdKey.base,
      &protobuf_expr_2eproto::scc_info_LabelKey.base,
      &protobuf_expr_2eproto::scc_info_LengthKey.base,
      &protobuf_expr_2eproto::scc_info_AllKey.base,
      &protobuf_common_2eproto::scc_info_NameOrId.base,}};

static void InitDefaultsVariable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Variable_default_instance_;
    new (ptr) ::common::Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Variable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Variable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsVariable}, {
      &protobuf_common_2eproto::scc_info_NameOrId.base,
      &protobuf_expr_2eproto::scc_info_Property.base,
      &protobuf_type_2eproto::scc_info_IrDataType.base,}};

static void InitDefaultsVariableKeys() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_VariableKeys_default_instance_;
    new (ptr) ::common::VariableKeys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::VariableKeys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VariableKeys =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVariableKeys}, {
      &protobuf_expr_2eproto::scc_info_Variable.base,}};

static void InitDefaultsDynamicParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_DynamicParam_default_instance_;
    new (ptr) ::common::DynamicParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::DynamicParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DynamicParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDynamicParam}, {
      &protobuf_type_2eproto::scc_info_IrDataType.base,}};

static void InitDefaultsCase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Case_WhenThen_default_instance_;
    new (ptr) ::common::Case_WhenThen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_Case_default_instance_;
    new (ptr) ::common::Case();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_Extract_default_instance_;
    new (ptr) ::common::Extract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_ExprOpr_default_instance_;
    new (ptr) ::common::ExprOpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_Expression_default_instance_;
    new (ptr) ::common::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Case_WhenThen::InitAsDefaultInstance();
  ::common::Case::InitAsDefaultInstance();
  ::common::Extract::InitAsDefaultInstance();
  ::common::ExprOpr::InitAsDefaultInstance();
  ::common::Expression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Case =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsCase}, {
      &protobuf_common_2eproto::scc_info_Pair.base,
      &protobuf_expr_2eproto::scc_info_Variable.base,
      &protobuf_expr_2eproto::scc_info_VariableKeys.base,
      &protobuf_expr_2eproto::scc_info_DynamicParam.base,
      &protobuf_type_2eproto::scc_info_IrDataType.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IdKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabelKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LengthKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameOrIdKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Property.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Variable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VariableKeys.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynamicParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Case.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::IdKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LabelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LengthKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::AllKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::NameOrIdKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::NameOrIdKey, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Property, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::common::PropertyDefaultTypeInternal, id_),
  offsetof(::common::PropertyDefaultTypeInternal, label_),
  offsetof(::common::PropertyDefaultTypeInternal, len_),
  offsetof(::common::PropertyDefaultTypeInternal, all_),
  offsetof(::common::PropertyDefaultTypeInternal, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Property, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Variable, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Variable, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Variable, node_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VariableKeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VariableKeys, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DynamicParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DynamicParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DynamicParam, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DynamicParam, data_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case_WhenThen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case_WhenThen, when_expression_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case_WhenThen, then_result_expression_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case, when_then_expressions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Case, else_result_expression_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Extract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Extract, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Extract, data_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ExprOpr, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ExprOpr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::common::ExprOprDefaultTypeInternal, logical_),
  offsetof(::common::ExprOprDefaultTypeInternal, arith_),
  offsetof(::common::ExprOprDefaultTypeInternal, const__),
  offsetof(::common::ExprOprDefaultTypeInternal, var_),
  offsetof(::common::ExprOprDefaultTypeInternal, brace_),
  offsetof(::common::ExprOprDefaultTypeInternal, vars_),
  offsetof(::common::ExprOprDefaultTypeInternal, var_map_),
  offsetof(::common::ExprOprDefaultTypeInternal, param_),
  offsetof(::common::ExprOprDefaultTypeInternal, case__),
  offsetof(::common::ExprOprDefaultTypeInternal, extract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ExprOpr, node_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ExprOpr, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Expression, operators_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::IdKey)},
  { 5, -1, sizeof(::common::LabelKey)},
  { 10, -1, sizeof(::common::LengthKey)},
  { 15, -1, sizeof(::common::AllKey)},
  { 20, -1, sizeof(::common::NameOrIdKey)},
  { 26, -1, sizeof(::common::Property)},
  { 37, -1, sizeof(::common::Variable)},
  { 45, -1, sizeof(::common::VariableKeys)},
  { 51, -1, sizeof(::common::DynamicParam)},
  { 59, -1, sizeof(::common::Case_WhenThen)},
  { 66, -1, sizeof(::common::Case)},
  { 73, -1, sizeof(::common::Extract)},
  { 80, -1, sizeof(::common::ExprOpr)},
  { 97, -1, sizeof(::common::Expression)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_IdKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_LabelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_LengthKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_AllKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_NameOrIdKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_VariableKeys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_DynamicParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Case_WhenThen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Case_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Extract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_ExprOpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Expression_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "expr.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nexpr.proto\022\006common\032\014common.proto\032\ntype"
      ".proto\"\007\n\005IdKey\"\n\n\010LabelKey\"\013\n\tLengthKey"
      "\"\010\n\006AllKey\",\n\013NameOrIdKey\022\035\n\003key\030\001 \001(\0132\020"
      ".common.NameOrId\"\264\001\n\010Property\022\033\n\002id\030\002 \001("
      "\0132\r.common.IdKeyH\000\022!\n\005label\030\003 \001(\0132\020.comm"
      "on.LabelKeyH\000\022 \n\003len\030\004 \001(\0132\021.common.Leng"
      "thKeyH\000\022\035\n\003all\030\005 \001(\0132\016.common.AllKeyH\000\022\037"
      "\n\003key\030\006 \001(\0132\020.common.NameOrIdH\000B\006\n\004item\""
      "t\n\010Variable\022\035\n\003tag\030\001 \001(\0132\020.common.NameOr"
      "Id\022\"\n\010property\030\002 \001(\0132\020.common.Property\022%"
      "\n\tnode_type\030\003 \001(\0132\022.common.IrDataType\".\n"
      "\014VariableKeys\022\036\n\004keys\030\001 \003(\0132\020.common.Var"
      "iable\"R\n\014DynamicParam\022\014\n\004name\030\001 \001(\t\022\r\n\005i"
      "ndex\030\002 \001(\005\022%\n\tdata_type\030\003 \001(\0132\022.common.I"
      "rDataType\"\335\001\n\004Case\0224\n\025when_then_expressi"
      "ons\030\001 \003(\0132\025.common.Case.WhenThen\0222\n\026else"
      "_result_expression\030\002 \001(\0132\022.common.Expres"
      "sion\032k\n\010WhenThen\022+\n\017when_expression\030\001 \001("
      "\0132\022.common.Expression\0222\n\026then_result_exp"
      "ression\030\002 \001(\0132\022.common.Expression\"\250\001\n\007Ex"
      "tract\022*\n\010interval\030\001 \001(\0162\030.common.Extract"
      ".Interval\022%\n\tdata_time\030\002 \001(\0132\022.common.Ex"
      "pression\"J\n\010Interval\022\010\n\004YEAR\020\000\022\t\n\005MONTH\020"
      "\001\022\007\n\003DAY\020\002\022\010\n\004HOUR\020\003\022\n\n\006MINUTE\020\004\022\n\n\006SECO"
      "ND\020\005\"\314\003\n\007ExprOpr\022\"\n\007logical\030\002 \001(\0162\017.comm"
      "on.LogicalH\000\022#\n\005arith\030\003 \001(\0162\022.common.Ari"
      "thmeticH\000\022\036\n\005const\030\004 \001(\0132\r.common.ValueH"
      "\000\022\037\n\003var\030\005 \001(\0132\020.common.VariableH\000\022&\n\005br"
      "ace\030\006 \001(\0162\025.common.ExprOpr.BraceH\000\022$\n\004va"
      "rs\030\007 \001(\0132\024.common.VariableKeysH\000\022\'\n\007var_"
      "map\030\010 \001(\0132\024.common.VariableKeysH\000\022%\n\005par"
      "am\030\t \001(\0132\024.common.DynamicParamH\000\022\034\n\004case"
      "\030\n \001(\0132\014.common.CaseH\000\022\"\n\007extract\030\013 \001(\0132"
      "\017.common.ExtractH\000\022%\n\tnode_type\030\014 \001(\0132\022."
      "common.IrDataType\"(\n\005Brace\022\016\n\nLEFT_BRACE"
      "\020\000\022\017\n\013RIGHT_BRACE\020\001B\006\n\004item\"0\n\nExpressio"
      "n\022\"\n\toperators\030\001 \003(\0132\017.common.ExprOpr*\226\001"
      "\n\007Logical\022\006\n\002EQ\020\000\022\006\n\002NE\020\001\022\006\n\002LT\020\002\022\006\n\002LE\020"
      "\003\022\006\n\002GT\020\004\022\006\n\002GE\020\005\022\n\n\006WITHIN\020\006\022\013\n\007WITHOUT"
      "\020\007\022\016\n\nSTARTSWITH\020\010\022\014\n\010ENDSWITH\020\t\022\007\n\003AND\020"
      "\n\022\006\n\002OR\020\013\022\007\n\003NOT\020\014\022\n\n\006ISNULL\020\r*\203\001\n\nArith"
      "metic\022\007\n\003ADD\020\000\022\007\n\003SUB\020\001\022\007\n\003MUL\020\002\022\007\n\003DIV\020"
      "\003\022\007\n\003MOD\020\004\022\007\n\003EXP\020\005\022\n\n\006BITAND\020\006\022\t\n\005BITOR"
      "\020\007\022\n\n\006BITXOR\020\010\022\r\n\tBITLSHIFT\020\t\022\r\n\tBITRSHI"
      "FT\020\nB4\n!com.alibaba.graphscope.gaia.prot"
      "oB\017OuterExpressionb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1826);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "expr.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_type_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_expr_2eproto
namespace common {
const ::google::protobuf::EnumDescriptor* Extract_Interval_descriptor() {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_expr_2eproto::file_level_enum_descriptors[0];
}
bool Extract_Interval_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Extract_Interval Extract::YEAR;
const Extract_Interval Extract::MONTH;
const Extract_Interval Extract::DAY;
const Extract_Interval Extract::HOUR;
const Extract_Interval Extract::MINUTE;
const Extract_Interval Extract::SECOND;
const Extract_Interval Extract::Interval_MIN;
const Extract_Interval Extract::Interval_MAX;
const int Extract::Interval_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExprOpr_Brace_descriptor() {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_expr_2eproto::file_level_enum_descriptors[1];
}
bool ExprOpr_Brace_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExprOpr_Brace ExprOpr::LEFT_BRACE;
const ExprOpr_Brace ExprOpr::RIGHT_BRACE;
const ExprOpr_Brace ExprOpr::Brace_MIN;
const ExprOpr_Brace ExprOpr::Brace_MAX;
const int ExprOpr::Brace_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Logical_descriptor() {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_expr_2eproto::file_level_enum_descriptors[2];
}
bool Logical_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Arithmetic_descriptor() {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_expr_2eproto::file_level_enum_descriptors[3];
}
bool Arithmetic_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void IdKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdKey::IdKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_IdKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.IdKey)
}
IdKey::IdKey(const IdKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.IdKey)
}

void IdKey::SharedCtor() {
}

IdKey::~IdKey() {
  // @@protoc_insertion_point(destructor:common.IdKey)
  SharedDtor();
}

void IdKey::SharedDtor() {
}

void IdKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdKey::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdKey& IdKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_IdKey.base);
  return *internal_default_instance();
}


void IdKey::Clear() {
// @@protoc_insertion_point(message_clear_start:common.IdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool IdKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.IdKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.IdKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.IdKey)
  return false;
#undef DO_
}

void IdKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.IdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.IdKey)
}

::google::protobuf::uint8* IdKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.IdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.IdKey)
  return target;
}

size_t IdKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.IdKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.IdKey)
  GOOGLE_DCHECK_NE(&from, this);
  const IdKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.IdKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.IdKey)
    MergeFrom(*source);
  }
}

void IdKey::MergeFrom(const IdKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.IdKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IdKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.IdKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdKey::CopyFrom(const IdKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.IdKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdKey::IsInitialized() const {
  return true;
}

void IdKey::Swap(IdKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdKey::InternalSwap(IdKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdKey::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabelKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelKey::LabelKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_LabelKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.LabelKey)
}
LabelKey::LabelKey(const LabelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.LabelKey)
}

void LabelKey::SharedCtor() {
}

LabelKey::~LabelKey() {
  // @@protoc_insertion_point(destructor:common.LabelKey)
  SharedDtor();
}

void LabelKey::SharedDtor() {
}

void LabelKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabelKey::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabelKey& LabelKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_LabelKey.base);
  return *internal_default_instance();
}


void LabelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:common.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LabelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.LabelKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.LabelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.LabelKey)
  return false;
#undef DO_
}

void LabelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.LabelKey)
}

::google::protobuf::uint8* LabelKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.LabelKey)
  return target;
}

size_t LabelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.LabelKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.LabelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabelKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.LabelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.LabelKey)
    MergeFrom(*source);
  }
}

void LabelKey::MergeFrom(const LabelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.LabelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LabelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.LabelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelKey::CopyFrom(const LabelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.LabelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelKey::IsInitialized() const {
  return true;
}

void LabelKey::Swap(LabelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelKey::InternalSwap(LabelKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabelKey::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LengthKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LengthKey::LengthKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_LengthKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.LengthKey)
}
LengthKey::LengthKey(const LengthKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.LengthKey)
}

void LengthKey::SharedCtor() {
}

LengthKey::~LengthKey() {
  // @@protoc_insertion_point(destructor:common.LengthKey)
  SharedDtor();
}

void LengthKey::SharedDtor() {
}

void LengthKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LengthKey::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LengthKey& LengthKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_LengthKey.base);
  return *internal_default_instance();
}


void LengthKey::Clear() {
// @@protoc_insertion_point(message_clear_start:common.LengthKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LengthKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.LengthKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.LengthKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.LengthKey)
  return false;
#undef DO_
}

void LengthKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.LengthKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.LengthKey)
}

::google::protobuf::uint8* LengthKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.LengthKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.LengthKey)
  return target;
}

size_t LengthKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.LengthKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LengthKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.LengthKey)
  GOOGLE_DCHECK_NE(&from, this);
  const LengthKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LengthKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.LengthKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.LengthKey)
    MergeFrom(*source);
  }
}

void LengthKey::MergeFrom(const LengthKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.LengthKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LengthKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.LengthKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LengthKey::CopyFrom(const LengthKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.LengthKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LengthKey::IsInitialized() const {
  return true;
}

void LengthKey::Swap(LengthKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LengthKey::InternalSwap(LengthKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LengthKey::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllKey::AllKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_AllKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.AllKey)
}
AllKey::AllKey(const AllKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.AllKey)
}

void AllKey::SharedCtor() {
}

AllKey::~AllKey() {
  // @@protoc_insertion_point(destructor:common.AllKey)
  SharedDtor();
}

void AllKey::SharedDtor() {
}

void AllKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllKey::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllKey& AllKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_AllKey.base);
  return *internal_default_instance();
}


void AllKey::Clear() {
// @@protoc_insertion_point(message_clear_start:common.AllKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AllKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.AllKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.AllKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.AllKey)
  return false;
#undef DO_
}

void AllKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.AllKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.AllKey)
}

::google::protobuf::uint8* AllKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.AllKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.AllKey)
  return target;
}

size_t AllKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.AllKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.AllKey)
  GOOGLE_DCHECK_NE(&from, this);
  const AllKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.AllKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.AllKey)
    MergeFrom(*source);
  }
}

void AllKey::MergeFrom(const AllKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.AllKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AllKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.AllKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllKey::CopyFrom(const AllKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.AllKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllKey::IsInitialized() const {
  return true;
}

void AllKey::Swap(AllKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllKey::InternalSwap(AllKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllKey::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameOrIdKey::InitAsDefaultInstance() {
  ::common::_NameOrIdKey_default_instance_._instance.get_mutable()->key_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
}
void NameOrIdKey::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameOrIdKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameOrIdKey::NameOrIdKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_NameOrIdKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.NameOrIdKey)
}
NameOrIdKey::NameOrIdKey(const NameOrIdKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::common::NameOrId(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.NameOrIdKey)
}

void NameOrIdKey::SharedCtor() {
  key_ = NULL;
}

NameOrIdKey::~NameOrIdKey() {
  // @@protoc_insertion_point(destructor:common.NameOrIdKey)
  SharedDtor();
}

void NameOrIdKey::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void NameOrIdKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameOrIdKey::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameOrIdKey& NameOrIdKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_NameOrIdKey.base);
  return *internal_default_instance();
}


void NameOrIdKey::Clear() {
// @@protoc_insertion_point(message_clear_start:common.NameOrIdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool NameOrIdKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.NameOrIdKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.NameOrId key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.NameOrIdKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.NameOrIdKey)
  return false;
#undef DO_
}

void NameOrIdKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.NameOrIdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.NameOrIdKey)
}

::google::protobuf::uint8* NameOrIdKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.NameOrIdKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.NameOrIdKey)
  return target;
}

size_t NameOrIdKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.NameOrIdKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.NameOrId key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameOrIdKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.NameOrIdKey)
  GOOGLE_DCHECK_NE(&from, this);
  const NameOrIdKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameOrIdKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.NameOrIdKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.NameOrIdKey)
    MergeFrom(*source);
  }
}

void NameOrIdKey::MergeFrom(const NameOrIdKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.NameOrIdKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::common::NameOrId::MergeFrom(from.key());
  }
}

void NameOrIdKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.NameOrIdKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameOrIdKey::CopyFrom(const NameOrIdKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.NameOrIdKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameOrIdKey::IsInitialized() const {
  return true;
}

void NameOrIdKey::Swap(NameOrIdKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameOrIdKey::InternalSwap(NameOrIdKey* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameOrIdKey::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Property::InitAsDefaultInstance() {
  ::common::_Property_default_instance_.id_ = const_cast< ::common::IdKey*>(
      ::common::IdKey::internal_default_instance());
  ::common::_Property_default_instance_.label_ = const_cast< ::common::LabelKey*>(
      ::common::LabelKey::internal_default_instance());
  ::common::_Property_default_instance_.len_ = const_cast< ::common::LengthKey*>(
      ::common::LengthKey::internal_default_instance());
  ::common::_Property_default_instance_.all_ = const_cast< ::common::AllKey*>(
      ::common::AllKey::internal_default_instance());
  ::common::_Property_default_instance_.key_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
}
void Property::set_allocated_id(::common::IdKey* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    item_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Property.id)
}
void Property::set_allocated_label(::common::LabelKey* label) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (label) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      label = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, label, submessage_arena);
    }
    set_has_label();
    item_.label_ = label;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Property.label)
}
void Property::set_allocated_len(::common::LengthKey* len) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (len) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      len = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, len, submessage_arena);
    }
    set_has_len();
    item_.len_ = len;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Property.len)
}
void Property::set_allocated_all(::common::AllKey* all) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (all) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      all = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, all, submessage_arena);
    }
    set_has_all();
    item_.all_ = all;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Property.all)
}
void Property::set_allocated_key(::common::NameOrId* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    set_has_key();
    item_.key_ = key;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Property.key)
}
void Property::clear_key() {
  if (has_key()) {
    delete item_.key_;
    clear_has_item();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kIdFieldNumber;
const int Property::kLabelFieldNumber;
const int Property::kLenFieldNumber;
const int Property::kAllFieldNumber;
const int Property::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Property.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kId: {
      mutable_id()->::common::IdKey::MergeFrom(from.id());
      break;
    }
    case kLabel: {
      mutable_label()->::common::LabelKey::MergeFrom(from.label());
      break;
    }
    case kLen: {
      mutable_len()->::common::LengthKey::MergeFrom(from.len());
      break;
    }
    case kAll: {
      mutable_all()->::common::AllKey::MergeFrom(from.all());
      break;
    }
    case kKey: {
      mutable_key()->::common::NameOrId::MergeFrom(from.key());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.Property)
}

void Property::SharedCtor() {
  clear_has_item();
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:common.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Property& Property::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Property.base);
  return *internal_default_instance();
}


void Property::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:common.Property)
  switch (item_case()) {
    case kId: {
      delete item_.id_;
      break;
    }
    case kLabel: {
      delete item_.label_;
      break;
    }
    case kLen: {
      delete item_.len_;
      break;
    }
    case kAll: {
      delete item_.all_;
      break;
    }
    case kKey: {
      delete item_.key_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Property)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.IdKey id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.LabelKey label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.LengthKey len = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_len()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.AllKey all = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.NameOrId key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.IdKey id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // .common.LabelKey label = 3;
  if (has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_label(), output);
  }

  // .common.LengthKey len = 4;
  if (has_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_len(), output);
  }

  // .common.AllKey all = 5;
  if (has_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_all(), output);
  }

  // .common.NameOrId key = 6;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.IdKey id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // .common.LabelKey label = 3;
  if (has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_label(), deterministic, target);
  }

  // .common.LengthKey len = 4;
  if (has_len()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_len(), deterministic, target);
  }

  // .common.AllKey all = 5;
  if (has_all()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_all(), deterministic, target);
  }

  // .common.NameOrId key = 6;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_key(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Property)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // .common.IdKey id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.id_);
      break;
    }
    // .common.LabelKey label = 3;
    case kLabel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.label_);
      break;
    }
    // .common.LengthKey len = 4;
    case kLen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.len_);
      break;
    }
    // .common.AllKey all = 5;
    case kAll: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.all_);
      break;
    }
    // .common.NameOrId key = 6;
    case kKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.key_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kId: {
      mutable_id()->::common::IdKey::MergeFrom(from.id());
      break;
    }
    case kLabel: {
      mutable_label()->::common::LabelKey::MergeFrom(from.label());
      break;
    }
    case kLen: {
      mutable_len()->::common::LengthKey::MergeFrom(from.len());
      break;
    }
    case kAll: {
      mutable_all()->::common::AllKey::MergeFrom(from.all());
      break;
    }
    case kKey: {
      mutable_key()->::common::NameOrId::MergeFrom(from.key());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Variable::InitAsDefaultInstance() {
  ::common::_Variable_default_instance_._instance.get_mutable()->tag_ = const_cast< ::common::NameOrId*>(
      ::common::NameOrId::internal_default_instance());
  ::common::_Variable_default_instance_._instance.get_mutable()->property_ = const_cast< ::common::Property*>(
      ::common::Property::internal_default_instance());
  ::common::_Variable_default_instance_._instance.get_mutable()->node_type_ = const_cast< ::common::IrDataType*>(
      ::common::IrDataType::internal_default_instance());
}
void Variable::clear_tag() {
  if (GetArenaNoVirtual() == NULL && tag_ != NULL) {
    delete tag_;
  }
  tag_ = NULL;
}
void Variable::clear_node_type() {
  if (GetArenaNoVirtual() == NULL && node_type_ != NULL) {
    delete node_type_;
  }
  node_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kTagFieldNumber;
const int Variable::kPropertyFieldNumber;
const int Variable::kNodeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Variable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Variable)
}
Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tag()) {
    tag_ = new ::common::NameOrId(*from.tag_);
  } else {
    tag_ = NULL;
  }
  if (from.has_property()) {
    property_ = new ::common::Property(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_node_type()) {
    node_type_ = new ::common::IrDataType(*from.node_type_);
  } else {
    node_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Variable)
}

void Variable::SharedCtor() {
  ::memset(&tag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_type_) -
      reinterpret_cast<char*>(&tag_)) + sizeof(node_type_));
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:common.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  if (this != internal_default_instance()) delete tag_;
  if (this != internal_default_instance()) delete property_;
  if (this != internal_default_instance()) delete node_type_;
}

void Variable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Variable::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Variable& Variable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Variable.base);
  return *internal_default_instance();
}


void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tag_ != NULL) {
    delete tag_;
  }
  tag_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && node_type_ != NULL) {
    delete node_type_;
  }
  node_type_ = NULL;
  _internal_metadata_.Clear();
}

bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Variable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.NameOrId tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Property property = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.IrDataType node_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Variable)
  return false;
#undef DO_
}

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId tag = 1;
  if (this->has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tag(), output);
  }

  // .common.Property property = 2;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_property(), output);
  }

  // .common.IrDataType node_type = 3;
  if (this->has_node_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_node_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.NameOrId tag = 1;
  if (this->has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tag(), deterministic, target);
  }

  // .common.Property property = 2;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_property(), deterministic, target);
  }

  // .common.IrDataType node_type = 3;
  if (this->has_node_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_node_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.NameOrId tag = 1;
  if (this->has_tag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tag_);
  }

  // .common.Property property = 2;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // .common.IrDataType node_type = 3;
  if (this->has_node_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Variable)
    MergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tag()) {
    mutable_tag()->::common::NameOrId::MergeFrom(from.tag());
  }
  if (from.has_property()) {
    mutable_property()->::common::Property::MergeFrom(from.property());
  }
  if (from.has_node_type()) {
    mutable_node_type()->::common::IrDataType::MergeFrom(from.node_type());
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable::IsInitialized() const {
  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  using std::swap;
  swap(tag_, other->tag_);
  swap(property_, other->property_);
  swap(node_type_, other->node_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VariableKeys::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableKeys::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableKeys::VariableKeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_VariableKeys.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.VariableKeys)
}
VariableKeys::VariableKeys(const VariableKeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.VariableKeys)
}

void VariableKeys::SharedCtor() {
}

VariableKeys::~VariableKeys() {
  // @@protoc_insertion_point(destructor:common.VariableKeys)
  SharedDtor();
}

void VariableKeys::SharedDtor() {
}

void VariableKeys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VariableKeys::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VariableKeys& VariableKeys::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_VariableKeys.base);
  return *internal_default_instance();
}


void VariableKeys::Clear() {
// @@protoc_insertion_point(message_clear_start:common.VariableKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool VariableKeys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.VariableKeys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.Variable keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.VariableKeys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.VariableKeys)
  return false;
#undef DO_
}

void VariableKeys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.VariableKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Variable keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.VariableKeys)
}

::google::protobuf::uint8* VariableKeys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.VariableKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Variable keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.VariableKeys)
  return target;
}

size_t VariableKeys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.VariableKeys)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.Variable keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VariableKeys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.VariableKeys)
  GOOGLE_DCHECK_NE(&from, this);
  const VariableKeys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VariableKeys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.VariableKeys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.VariableKeys)
    MergeFrom(*source);
  }
}

void VariableKeys::MergeFrom(const VariableKeys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.VariableKeys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void VariableKeys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.VariableKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableKeys::CopyFrom(const VariableKeys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.VariableKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariableKeys::IsInitialized() const {
  return true;
}

void VariableKeys::Swap(VariableKeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariableKeys::InternalSwap(VariableKeys* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VariableKeys::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynamicParam::InitAsDefaultInstance() {
  ::common::_DynamicParam_default_instance_._instance.get_mutable()->data_type_ = const_cast< ::common::IrDataType*>(
      ::common::IrDataType::internal_default_instance());
}
void DynamicParam::clear_data_type() {
  if (GetArenaNoVirtual() == NULL && data_type_ != NULL) {
    delete data_type_;
  }
  data_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicParam::kNameFieldNumber;
const int DynamicParam::kIndexFieldNumber;
const int DynamicParam::kDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicParam::DynamicParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_DynamicParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.DynamicParam)
}
DynamicParam::DynamicParam(const DynamicParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data_type()) {
    data_type_ = new ::common::IrDataType(*from.data_type_);
  } else {
    data_type_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:common.DynamicParam)
}

void DynamicParam::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&data_type_)) + sizeof(index_));
}

DynamicParam::~DynamicParam() {
  // @@protoc_insertion_point(destructor:common.DynamicParam)
  SharedDtor();
}

void DynamicParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_type_;
}

void DynamicParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynamicParam::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicParam& DynamicParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_DynamicParam.base);
  return *internal_default_instance();
}


void DynamicParam::Clear() {
// @@protoc_insertion_point(message_clear_start:common.DynamicParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_type_ != NULL) {
    delete data_type_;
  }
  data_type_ = NULL;
  index_ = 0;
  _internal_metadata_.Clear();
}

bool DynamicParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.DynamicParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.DynamicParam.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.IrDataType data_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.DynamicParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.DynamicParam)
  return false;
#undef DO_
}

void DynamicParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.DynamicParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.DynamicParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // .common.IrDataType data_type = 3;
  if (this->has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.DynamicParam)
}

::google::protobuf::uint8* DynamicParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.DynamicParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.DynamicParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // .common.IrDataType data_type = 3;
  if (this->has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.DynamicParam)
  return target;
}

size_t DynamicParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.DynamicParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .common.IrDataType data_type = 3;
  if (this->has_data_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_type_);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynamicParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.DynamicParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.DynamicParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.DynamicParam)
    MergeFrom(*source);
  }
}

void DynamicParam::MergeFrom(const DynamicParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.DynamicParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data_type()) {
    mutable_data_type()->::common::IrDataType::MergeFrom(from.data_type());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void DynamicParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.DynamicParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicParam::CopyFrom(const DynamicParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.DynamicParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicParam::IsInitialized() const {
  return true;
}

void DynamicParam::Swap(DynamicParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicParam::InternalSwap(DynamicParam* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_type_, other->data_type_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynamicParam::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Case_WhenThen::InitAsDefaultInstance() {
  ::common::_Case_WhenThen_default_instance_._instance.get_mutable()->when_expression_ = const_cast< ::common::Expression*>(
      ::common::Expression::internal_default_instance());
  ::common::_Case_WhenThen_default_instance_._instance.get_mutable()->then_result_expression_ = const_cast< ::common::Expression*>(
      ::common::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Case_WhenThen::kWhenExpressionFieldNumber;
const int Case_WhenThen::kThenResultExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Case_WhenThen::Case_WhenThen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Case.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Case.WhenThen)
}
Case_WhenThen::Case_WhenThen(const Case_WhenThen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_when_expression()) {
    when_expression_ = new ::common::Expression(*from.when_expression_);
  } else {
    when_expression_ = NULL;
  }
  if (from.has_then_result_expression()) {
    then_result_expression_ = new ::common::Expression(*from.then_result_expression_);
  } else {
    then_result_expression_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Case.WhenThen)
}

void Case_WhenThen::SharedCtor() {
  ::memset(&when_expression_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&then_result_expression_) -
      reinterpret_cast<char*>(&when_expression_)) + sizeof(then_result_expression_));
}

Case_WhenThen::~Case_WhenThen() {
  // @@protoc_insertion_point(destructor:common.Case.WhenThen)
  SharedDtor();
}

void Case_WhenThen::SharedDtor() {
  if (this != internal_default_instance()) delete when_expression_;
  if (this != internal_default_instance()) delete then_result_expression_;
}

void Case_WhenThen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Case_WhenThen::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Case_WhenThen& Case_WhenThen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Case.base);
  return *internal_default_instance();
}


void Case_WhenThen::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Case.WhenThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && when_expression_ != NULL) {
    delete when_expression_;
  }
  when_expression_ = NULL;
  if (GetArenaNoVirtual() == NULL && then_result_expression_ != NULL) {
    delete then_result_expression_;
  }
  then_result_expression_ = NULL;
  _internal_metadata_.Clear();
}

bool Case_WhenThen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Case.WhenThen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Expression when_expression = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_when_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Expression then_result_expression = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_then_result_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Case.WhenThen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Case.WhenThen)
  return false;
#undef DO_
}

void Case_WhenThen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Case.WhenThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Expression when_expression = 1;
  if (this->has_when_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_when_expression(), output);
  }

  // .common.Expression then_result_expression = 2;
  if (this->has_then_result_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_then_result_expression(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Case.WhenThen)
}

::google::protobuf::uint8* Case_WhenThen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Case.WhenThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Expression when_expression = 1;
  if (this->has_when_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_when_expression(), deterministic, target);
  }

  // .common.Expression then_result_expression = 2;
  if (this->has_then_result_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_then_result_expression(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Case.WhenThen)
  return target;
}

size_t Case_WhenThen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Case.WhenThen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Expression when_expression = 1;
  if (this->has_when_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *when_expression_);
  }

  // .common.Expression then_result_expression = 2;
  if (this->has_then_result_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *then_result_expression_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Case_WhenThen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Case.WhenThen)
  GOOGLE_DCHECK_NE(&from, this);
  const Case_WhenThen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Case_WhenThen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Case.WhenThen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Case.WhenThen)
    MergeFrom(*source);
  }
}

void Case_WhenThen::MergeFrom(const Case_WhenThen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Case.WhenThen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_when_expression()) {
    mutable_when_expression()->::common::Expression::MergeFrom(from.when_expression());
  }
  if (from.has_then_result_expression()) {
    mutable_then_result_expression()->::common::Expression::MergeFrom(from.then_result_expression());
  }
}

void Case_WhenThen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Case.WhenThen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Case_WhenThen::CopyFrom(const Case_WhenThen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Case.WhenThen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Case_WhenThen::IsInitialized() const {
  return true;
}

void Case_WhenThen::Swap(Case_WhenThen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Case_WhenThen::InternalSwap(Case_WhenThen* other) {
  using std::swap;
  swap(when_expression_, other->when_expression_);
  swap(then_result_expression_, other->then_result_expression_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Case_WhenThen::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Case::InitAsDefaultInstance() {
  ::common::_Case_default_instance_._instance.get_mutable()->else_result_expression_ = const_cast< ::common::Expression*>(
      ::common::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Case::kWhenThenExpressionsFieldNumber;
const int Case::kElseResultExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Case::Case()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Case.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Case)
}
Case::Case(const Case& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      when_then_expressions_(from.when_then_expressions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_else_result_expression()) {
    else_result_expression_ = new ::common::Expression(*from.else_result_expression_);
  } else {
    else_result_expression_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Case)
}

void Case::SharedCtor() {
  else_result_expression_ = NULL;
}

Case::~Case() {
  // @@protoc_insertion_point(destructor:common.Case)
  SharedDtor();
}

void Case::SharedDtor() {
  if (this != internal_default_instance()) delete else_result_expression_;
}

void Case::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Case::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Case& Case::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Case.base);
  return *internal_default_instance();
}


void Case::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Case)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  when_then_expressions_.Clear();
  if (GetArenaNoVirtual() == NULL && else_result_expression_ != NULL) {
    delete else_result_expression_;
  }
  else_result_expression_ = NULL;
  _internal_metadata_.Clear();
}

bool Case::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Case)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.Case.WhenThen when_then_expressions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_when_then_expressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Expression else_result_expression = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_else_result_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Case)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Case)
  return false;
#undef DO_
}

void Case::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Case)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Case.WhenThen when_then_expressions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->when_then_expressions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->when_then_expressions(static_cast<int>(i)),
      output);
  }

  // .common.Expression else_result_expression = 2;
  if (this->has_else_result_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_else_result_expression(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Case)
}

::google::protobuf::uint8* Case::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Case)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Case.WhenThen when_then_expressions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->when_then_expressions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->when_then_expressions(static_cast<int>(i)), deterministic, target);
  }

  // .common.Expression else_result_expression = 2;
  if (this->has_else_result_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_else_result_expression(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Case)
  return target;
}

size_t Case::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Case)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.Case.WhenThen when_then_expressions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->when_then_expressions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->when_then_expressions(static_cast<int>(i)));
    }
  }

  // .common.Expression else_result_expression = 2;
  if (this->has_else_result_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *else_result_expression_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Case::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Case)
  GOOGLE_DCHECK_NE(&from, this);
  const Case* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Case>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Case)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Case)
    MergeFrom(*source);
  }
}

void Case::MergeFrom(const Case& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Case)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  when_then_expressions_.MergeFrom(from.when_then_expressions_);
  if (from.has_else_result_expression()) {
    mutable_else_result_expression()->::common::Expression::MergeFrom(from.else_result_expression());
  }
}

void Case::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Case)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Case::CopyFrom(const Case& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Case)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Case::IsInitialized() const {
  return true;
}

void Case::Swap(Case* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Case::InternalSwap(Case* other) {
  using std::swap;
  CastToBase(&when_then_expressions_)->InternalSwap(CastToBase(&other->when_then_expressions_));
  swap(else_result_expression_, other->else_result_expression_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Case::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Extract::InitAsDefaultInstance() {
  ::common::_Extract_default_instance_._instance.get_mutable()->data_time_ = const_cast< ::common::Expression*>(
      ::common::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extract::kIntervalFieldNumber;
const int Extract::kDataTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extract::Extract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Case.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Extract)
}
Extract::Extract(const Extract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data_time()) {
    data_time_ = new ::common::Expression(*from.data_time_);
  } else {
    data_time_ = NULL;
  }
  interval_ = from.interval_;
  // @@protoc_insertion_point(copy_constructor:common.Extract)
}

void Extract::SharedCtor() {
  ::memset(&data_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&data_time_)) + sizeof(interval_));
}

Extract::~Extract() {
  // @@protoc_insertion_point(destructor:common.Extract)
  SharedDtor();
}

void Extract::SharedDtor() {
  if (this != internal_default_instance()) delete data_time_;
}

void Extract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extract::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extract& Extract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Case.base);
  return *internal_default_instance();
}


void Extract::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_time_ != NULL) {
    delete data_time_;
  }
  data_time_ = NULL;
  interval_ = 0;
  _internal_metadata_.Clear();
}

bool Extract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Extract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Extract.Interval interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interval(static_cast< ::common::Extract_Interval >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Expression data_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Extract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Extract)
  return false;
#undef DO_
}

void Extract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Extract.Interval interval = 1;
  if (this->interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interval(), output);
  }

  // .common.Expression data_time = 2;
  if (this->has_data_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Extract)
}

::google::protobuf::uint8* Extract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Extract.Interval interval = 1;
  if (this->interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interval(), target);
  }

  // .common.Expression data_time = 2;
  if (this->has_data_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Extract)
  return target;
}

size_t Extract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Extract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Expression data_time = 2;
  if (this->has_data_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_time_);
  }

  // .common.Extract.Interval interval = 1;
  if (this->interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Extract)
  GOOGLE_DCHECK_NE(&from, this);
  const Extract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Extract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Extract)
    MergeFrom(*source);
  }
}

void Extract::MergeFrom(const Extract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Extract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data_time()) {
    mutable_data_time()->::common::Expression::MergeFrom(from.data_time());
  }
  if (from.interval() != 0) {
    set_interval(from.interval());
  }
}

void Extract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Extract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extract::CopyFrom(const Extract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Extract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extract::IsInitialized() const {
  return true;
}

void Extract::Swap(Extract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extract::InternalSwap(Extract* other) {
  using std::swap;
  swap(data_time_, other->data_time_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extract::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExprOpr::InitAsDefaultInstance() {
  ::common::_ExprOpr_default_instance_.logical_ = 0;
  ::common::_ExprOpr_default_instance_.arith_ = 0;
  ::common::_ExprOpr_default_instance_.const__ = const_cast< ::common::Value*>(
      ::common::Value::internal_default_instance());
  ::common::_ExprOpr_default_instance_.var_ = const_cast< ::common::Variable*>(
      ::common::Variable::internal_default_instance());
  ::common::_ExprOpr_default_instance_.brace_ = 0;
  ::common::_ExprOpr_default_instance_.vars_ = const_cast< ::common::VariableKeys*>(
      ::common::VariableKeys::internal_default_instance());
  ::common::_ExprOpr_default_instance_.var_map_ = const_cast< ::common::VariableKeys*>(
      ::common::VariableKeys::internal_default_instance());
  ::common::_ExprOpr_default_instance_.param_ = const_cast< ::common::DynamicParam*>(
      ::common::DynamicParam::internal_default_instance());
  ::common::_ExprOpr_default_instance_.case__ = const_cast< ::common::Case*>(
      ::common::Case::internal_default_instance());
  ::common::_ExprOpr_default_instance_.extract_ = const_cast< ::common::Extract*>(
      ::common::Extract::internal_default_instance());
  ::common::_ExprOpr_default_instance_._instance.get_mutable()->node_type_ = const_cast< ::common::IrDataType*>(
      ::common::IrDataType::internal_default_instance());
}
void ExprOpr::set_allocated_const_(::common::Value* const_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (const_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      const_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, const_, submessage_arena);
    }
    set_has_const_();
    item_.const__ = const_;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.const)
}
void ExprOpr::clear_const_() {
  if (has_const_()) {
    delete item_.const__;
    clear_has_item();
  }
}
void ExprOpr::set_allocated_var(::common::Variable* var) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (var) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      var = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, var, submessage_arena);
    }
    set_has_var();
    item_.var_ = var;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.var)
}
void ExprOpr::set_allocated_vars(::common::VariableKeys* vars) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (vars) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vars = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vars, submessage_arena);
    }
    set_has_vars();
    item_.vars_ = vars;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.vars)
}
void ExprOpr::set_allocated_var_map(::common::VariableKeys* var_map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (var_map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      var_map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, var_map, submessage_arena);
    }
    set_has_var_map();
    item_.var_map_ = var_map;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.var_map)
}
void ExprOpr::set_allocated_param(::common::DynamicParam* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
    item_.param_ = param;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.param)
}
void ExprOpr::set_allocated_case_(::common::Case* case_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (case_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      case_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, case_, submessage_arena);
    }
    set_has_case_();
    item_.case__ = case_;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.case)
}
void ExprOpr::set_allocated_extract(::common::Extract* extract) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (extract) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extract = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extract, submessage_arena);
    }
    set_has_extract();
    item_.extract_ = extract;
  }
  // @@protoc_insertion_point(field_set_allocated:common.ExprOpr.extract)
}
void ExprOpr::clear_node_type() {
  if (GetArenaNoVirtual() == NULL && node_type_ != NULL) {
    delete node_type_;
  }
  node_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExprOpr::kLogicalFieldNumber;
const int ExprOpr::kArithFieldNumber;
const int ExprOpr::kConstFieldNumber;
const int ExprOpr::kVarFieldNumber;
const int ExprOpr::kBraceFieldNumber;
const int ExprOpr::kVarsFieldNumber;
const int ExprOpr::kVarMapFieldNumber;
const int ExprOpr::kParamFieldNumber;
const int ExprOpr::kCaseFieldNumber;
const int ExprOpr::kExtractFieldNumber;
const int ExprOpr::kNodeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExprOpr::ExprOpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Case.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ExprOpr)
}
ExprOpr::ExprOpr(const ExprOpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node_type()) {
    node_type_ = new ::common::IrDataType(*from.node_type_);
  } else {
    node_type_ = NULL;
  }
  clear_has_item();
  switch (from.item_case()) {
    case kLogical: {
      set_logical(from.logical());
      break;
    }
    case kArith: {
      set_arith(from.arith());
      break;
    }
    case kConst: {
      mutable_const_()->::common::Value::MergeFrom(from.const_());
      break;
    }
    case kVar: {
      mutable_var()->::common::Variable::MergeFrom(from.var());
      break;
    }
    case kBrace: {
      set_brace(from.brace());
      break;
    }
    case kVars: {
      mutable_vars()->::common::VariableKeys::MergeFrom(from.vars());
      break;
    }
    case kVarMap: {
      mutable_var_map()->::common::VariableKeys::MergeFrom(from.var_map());
      break;
    }
    case kParam: {
      mutable_param()->::common::DynamicParam::MergeFrom(from.param());
      break;
    }
    case kCase: {
      mutable_case_()->::common::Case::MergeFrom(from.case_());
      break;
    }
    case kExtract: {
      mutable_extract()->::common::Extract::MergeFrom(from.extract());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.ExprOpr)
}

void ExprOpr::SharedCtor() {
  node_type_ = NULL;
  clear_has_item();
}

ExprOpr::~ExprOpr() {
  // @@protoc_insertion_point(destructor:common.ExprOpr)
  SharedDtor();
}

void ExprOpr::SharedDtor() {
  if (this != internal_default_instance()) delete node_type_;
  if (has_item()) {
    clear_item();
  }
}

void ExprOpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExprOpr::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExprOpr& ExprOpr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Case.base);
  return *internal_default_instance();
}


void ExprOpr::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:common.ExprOpr)
  switch (item_case()) {
    case kLogical: {
      // No need to clear
      break;
    }
    case kArith: {
      // No need to clear
      break;
    }
    case kConst: {
      delete item_.const__;
      break;
    }
    case kVar: {
      delete item_.var_;
      break;
    }
    case kBrace: {
      // No need to clear
      break;
    }
    case kVars: {
      delete item_.vars_;
      break;
    }
    case kVarMap: {
      delete item_.var_map_;
      break;
    }
    case kParam: {
      delete item_.param_;
      break;
    }
    case kCase: {
      delete item_.case__;
      break;
    }
    case kExtract: {
      delete item_.extract_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void ExprOpr::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ExprOpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && node_type_ != NULL) {
    delete node_type_;
  }
  node_type_ = NULL;
  clear_item();
  _internal_metadata_.Clear();
}

bool ExprOpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ExprOpr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Logical logical = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logical(static_cast< ::common::Logical >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Arithmetic arith = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_arith(static_cast< ::common::Arithmetic >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Value const = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_const_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Variable var = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.ExprOpr.Brace brace = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_brace(static_cast< ::common::ExprOpr_Brace >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.VariableKeys vars = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.VariableKeys var_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.DynamicParam param = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Case case = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_case_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Extract extract = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.IrDataType node_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ExprOpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ExprOpr)
  return false;
#undef DO_
}

void ExprOpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ExprOpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Logical logical = 2;
  if (has_logical()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->logical(), output);
  }

  // .common.Arithmetic arith = 3;
  if (has_arith()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->arith(), output);
  }

  // .common.Value const = 4;
  if (has_const_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_const_(), output);
  }

  // .common.Variable var = 5;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_var(), output);
  }

  // .common.ExprOpr.Brace brace = 6;
  if (has_brace()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->brace(), output);
  }

  // .common.VariableKeys vars = 7;
  if (has_vars()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_vars(), output);
  }

  // .common.VariableKeys var_map = 8;
  if (has_var_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_var_map(), output);
  }

  // .common.DynamicParam param = 9;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_param(), output);
  }

  // .common.Case case = 10;
  if (has_case_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_case_(), output);
  }

  // .common.Extract extract = 11;
  if (has_extract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_extract(), output);
  }

  // .common.IrDataType node_type = 12;
  if (this->has_node_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_node_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ExprOpr)
}

::google::protobuf::uint8* ExprOpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ExprOpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Logical logical = 2;
  if (has_logical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->logical(), target);
  }

  // .common.Arithmetic arith = 3;
  if (has_arith()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->arith(), target);
  }

  // .common.Value const = 4;
  if (has_const_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_const_(), deterministic, target);
  }

  // .common.Variable var = 5;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_var(), deterministic, target);
  }

  // .common.ExprOpr.Brace brace = 6;
  if (has_brace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->brace(), target);
  }

  // .common.VariableKeys vars = 7;
  if (has_vars()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_vars(), deterministic, target);
  }

  // .common.VariableKeys var_map = 8;
  if (has_var_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_var_map(), deterministic, target);
  }

  // .common.DynamicParam param = 9;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_param(), deterministic, target);
  }

  // .common.Case case = 10;
  if (has_case_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_case_(), deterministic, target);
  }

  // .common.Extract extract = 11;
  if (has_extract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_extract(), deterministic, target);
  }

  // .common.IrDataType node_type = 12;
  if (this->has_node_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_node_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ExprOpr)
  return target;
}

size_t ExprOpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ExprOpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.IrDataType node_type = 12;
  if (this->has_node_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_type_);
  }

  switch (item_case()) {
    // .common.Logical logical = 2;
    case kLogical: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->logical());
      break;
    }
    // .common.Arithmetic arith = 3;
    case kArith: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->arith());
      break;
    }
    // .common.Value const = 4;
    case kConst: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.const__);
      break;
    }
    // .common.Variable var = 5;
    case kVar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.var_);
      break;
    }
    // .common.ExprOpr.Brace brace = 6;
    case kBrace: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brace());
      break;
    }
    // .common.VariableKeys vars = 7;
    case kVars: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.vars_);
      break;
    }
    // .common.VariableKeys var_map = 8;
    case kVarMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.var_map_);
      break;
    }
    // .common.DynamicParam param = 9;
    case kParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.param_);
      break;
    }
    // .common.Case case = 10;
    case kCase: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.case__);
      break;
    }
    // .common.Extract extract = 11;
    case kExtract: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.extract_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExprOpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ExprOpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ExprOpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExprOpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ExprOpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ExprOpr)
    MergeFrom(*source);
  }
}

void ExprOpr::MergeFrom(const ExprOpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ExprOpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node_type()) {
    mutable_node_type()->::common::IrDataType::MergeFrom(from.node_type());
  }
  switch (from.item_case()) {
    case kLogical: {
      set_logical(from.logical());
      break;
    }
    case kArith: {
      set_arith(from.arith());
      break;
    }
    case kConst: {
      mutable_const_()->::common::Value::MergeFrom(from.const_());
      break;
    }
    case kVar: {
      mutable_var()->::common::Variable::MergeFrom(from.var());
      break;
    }
    case kBrace: {
      set_brace(from.brace());
      break;
    }
    case kVars: {
      mutable_vars()->::common::VariableKeys::MergeFrom(from.vars());
      break;
    }
    case kVarMap: {
      mutable_var_map()->::common::VariableKeys::MergeFrom(from.var_map());
      break;
    }
    case kParam: {
      mutable_param()->::common::DynamicParam::MergeFrom(from.param());
      break;
    }
    case kCase: {
      mutable_case_()->::common::Case::MergeFrom(from.case_());
      break;
    }
    case kExtract: {
      mutable_extract()->::common::Extract::MergeFrom(from.extract());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void ExprOpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ExprOpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExprOpr::CopyFrom(const ExprOpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ExprOpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExprOpr::IsInitialized() const {
  return true;
}

void ExprOpr::Swap(ExprOpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExprOpr::InternalSwap(ExprOpr* other) {
  using std::swap;
  swap(node_type_, other->node_type_);
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExprOpr::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kOperatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_expr_2eproto::scc_info_Case.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operators_(from.operators_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.Expression)
}

void Expression::SharedCtor() {
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:common.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
}

void Expression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_expr_2eproto::scc_info_Case.base);
  return *internal_default_instance();
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operators_.Clear();
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Expression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.ExprOpr operators = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.ExprOpr operators = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->operators(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.ExprOpr operators = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->operators(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.ExprOpr operators = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->operators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operators(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operators_.MergeFrom(from.operators_);
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  CastToBase(&operators_)->InternalSwap(CastToBase(&other->operators_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_expr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_expr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::IdKey* Arena::CreateMaybeMessage< ::common::IdKey >(Arena* arena) {
  return Arena::CreateInternal< ::common::IdKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::LabelKey* Arena::CreateMaybeMessage< ::common::LabelKey >(Arena* arena) {
  return Arena::CreateInternal< ::common::LabelKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::LengthKey* Arena::CreateMaybeMessage< ::common::LengthKey >(Arena* arena) {
  return Arena::CreateInternal< ::common::LengthKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::AllKey* Arena::CreateMaybeMessage< ::common::AllKey >(Arena* arena) {
  return Arena::CreateInternal< ::common::AllKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::NameOrIdKey* Arena::CreateMaybeMessage< ::common::NameOrIdKey >(Arena* arena) {
  return Arena::CreateInternal< ::common::NameOrIdKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Property* Arena::CreateMaybeMessage< ::common::Property >(Arena* arena) {
  return Arena::CreateInternal< ::common::Property >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Variable* Arena::CreateMaybeMessage< ::common::Variable >(Arena* arena) {
  return Arena::CreateInternal< ::common::Variable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::VariableKeys* Arena::CreateMaybeMessage< ::common::VariableKeys >(Arena* arena) {
  return Arena::CreateInternal< ::common::VariableKeys >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::DynamicParam* Arena::CreateMaybeMessage< ::common::DynamicParam >(Arena* arena) {
  return Arena::CreateInternal< ::common::DynamicParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Case_WhenThen* Arena::CreateMaybeMessage< ::common::Case_WhenThen >(Arena* arena) {
  return Arena::CreateInternal< ::common::Case_WhenThen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Case* Arena::CreateMaybeMessage< ::common::Case >(Arena* arena) {
  return Arena::CreateInternal< ::common::Case >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Extract* Arena::CreateMaybeMessage< ::common::Extract >(Arena* arena) {
  return Arena::CreateInternal< ::common::Extract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::ExprOpr* Arena::CreateMaybeMessage< ::common::ExprOpr >(Arena* arena) {
  return Arena::CreateInternal< ::common::ExprOpr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Expression* Arena::CreateMaybeMessage< ::common::Expression >(Arena* arena) {
  return Arena::CreateInternal< ::common::Expression >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
