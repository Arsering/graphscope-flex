// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_I32Array;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_I64Array;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_None;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Pair;
}  // namespace protobuf_common_2eproto
namespace common {
class NoneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<None>
      _instance;
} _None_default_instance_;
class I32ArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<I32Array>
      _instance;
} _I32Array_default_instance_;
class I64ArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<I64Array>
      _instance;
} _I64Array_default_instance_;
class DoubleArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleArray>
      _instance;
} _DoubleArray_default_instance_;
class StringArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringArray>
      _instance;
} _StringArray_default_instance_;
class PairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pair>
      _instance;
} _Pair_default_instance_;
class PairArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairArray>
      _instance;
} _PairArray_default_instance_;
class NameOrIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameOrId>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
} _NameOrId_default_instance_;
class ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value>
      _instance;
  bool boolean_;
  ::google::protobuf::int32 i32_;
  ::google::protobuf::int64 i64_;
  double f64_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr blob_;
  const ::common::I32Array* i32_array_;
  const ::common::I64Array* i64_array_;
  const ::common::DoubleArray* f64_array_;
  const ::common::StringArray* str_array_;
  const ::common::PairArray* pair_array_;
  const ::common::None* none_;
} _Value_default_instance_;
}  // namespace common
namespace protobuf_common_2eproto {
static void InitDefaultsNone() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_None_default_instance_;
    new (ptr) ::common::None();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::None::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_None =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNone}, {}};

static void InitDefaultsI32Array() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_I32Array_default_instance_;
    new (ptr) ::common::I32Array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::I32Array::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_I32Array =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsI32Array}, {}};

static void InitDefaultsI64Array() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_I64Array_default_instance_;
    new (ptr) ::common::I64Array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::I64Array::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_I64Array =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsI64Array}, {}};

static void InitDefaultsDoubleArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_DoubleArray_default_instance_;
    new (ptr) ::common::DoubleArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::DoubleArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DoubleArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDoubleArray}, {}};

static void InitDefaultsStringArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_StringArray_default_instance_;
    new (ptr) ::common::StringArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::StringArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringArray}, {}};

static void InitDefaultsPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Pair_default_instance_;
    new (ptr) ::common::Pair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_PairArray_default_instance_;
    new (ptr) ::common::PairArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::common::_Value_default_instance_;
    new (ptr) ::common::Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Pair::InitAsDefaultInstance();
  ::common::PairArray::InitAsDefaultInstance();
  ::common::Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Pair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPair}, {
      &protobuf_common_2eproto::scc_info_I32Array.base,
      &protobuf_common_2eproto::scc_info_I64Array.base,
      &protobuf_common_2eproto::scc_info_DoubleArray.base,
      &protobuf_common_2eproto::scc_info_StringArray.base,
      &protobuf_common_2eproto::scc_info_None.base,}};

static void InitDefaultsNameOrId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_NameOrId_default_instance_;
    new (ptr) ::common::NameOrId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::NameOrId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameOrId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameOrId}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_None.base);
  ::google::protobuf::internal::InitSCC(&scc_info_I32Array.base);
  ::google::protobuf::internal::InitSCC(&scc_info_I64Array.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoubleArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameOrId.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::None, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::I32Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::I32Array, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::I64Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::I64Array, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DoubleArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::DoubleArray, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringArray, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Pair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Pair, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PairArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PairArray, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::NameOrId, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::NameOrId, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::common::NameOrIdDefaultTypeInternal, name_),
  offsetof(::common::NameOrIdDefaultTypeInternal, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::NameOrId, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::common::ValueDefaultTypeInternal, boolean_),
  offsetof(::common::ValueDefaultTypeInternal, i32_),
  offsetof(::common::ValueDefaultTypeInternal, i64_),
  offsetof(::common::ValueDefaultTypeInternal, f64_),
  offsetof(::common::ValueDefaultTypeInternal, str_),
  offsetof(::common::ValueDefaultTypeInternal, blob_),
  offsetof(::common::ValueDefaultTypeInternal, i32_array_),
  offsetof(::common::ValueDefaultTypeInternal, i64_array_),
  offsetof(::common::ValueDefaultTypeInternal, f64_array_),
  offsetof(::common::ValueDefaultTypeInternal, str_array_),
  offsetof(::common::ValueDefaultTypeInternal, pair_array_),
  offsetof(::common::ValueDefaultTypeInternal, none_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Value, item_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::None)},
  { 5, -1, sizeof(::common::I32Array)},
  { 11, -1, sizeof(::common::I64Array)},
  { 17, -1, sizeof(::common::DoubleArray)},
  { 23, -1, sizeof(::common::StringArray)},
  { 29, -1, sizeof(::common::Pair)},
  { 36, -1, sizeof(::common::PairArray)},
  { 42, -1, sizeof(::common::NameOrId)},
  { 50, -1, sizeof(::common::Value)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_None_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_I32Array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_I64Array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_DoubleArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_StringArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Pair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_PairArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_NameOrId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Value_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\006common\"\006\n\004None\"\030\n\010I32Arr"
      "ay\022\014\n\004item\030\001 \003(\005\"\030\n\010I64Array\022\014\n\004item\030\001 \003"
      "(\003\"\033\n\013DoubleArray\022\014\n\004item\030\001 \003(\001\"\033\n\013Strin"
      "gArray\022\014\n\004item\030\001 \003(\t\">\n\004Pair\022\032\n\003key\030\001 \001("
      "\0132\r.common.Value\022\032\n\003val\030\002 \001(\0132\r.common.V"
      "alue\"\'\n\tPairArray\022\032\n\004item\030\001 \003(\0132\014.common"
      ".Pair\"0\n\010NameOrId\022\016\n\004name\030\001 \001(\tH\000\022\014\n\002id\030"
      "\002 \001(\005H\000B\006\n\004item\"\327\002\n\005Value\022\021\n\007boolean\030\002 \001"
      "(\010H\000\022\r\n\003i32\030\003 \001(\005H\000\022\r\n\003i64\030\004 \001(\003H\000\022\r\n\003f6"
      "4\030\005 \001(\001H\000\022\r\n\003str\030\006 \001(\tH\000\022\016\n\004blob\030\007 \001(\014H\000"
      "\022%\n\ti32_array\030\010 \001(\0132\020.common.I32ArrayH\000\022"
      "%\n\ti64_array\030\t \001(\0132\020.common.I64ArrayH\000\022("
      "\n\tf64_array\030\n \001(\0132\023.common.DoubleArrayH\000"
      "\022(\n\tstr_array\030\013 \001(\0132\023.common.StringArray"
      "H\000\022\'\n\npair_array\030\014 \001(\0132\021.common.PairArra"
      "yH\000\022\034\n\004none\030\r \001(\0132\014.common.NoneH\000B\006\n\004ite"
      "m*\272\001\n\010DataType\022\013\n\007BOOLEAN\020\000\022\t\n\005INT32\020\001\022\t"
      "\n\005INT64\020\002\022\n\n\006DOUBLE\020\003\022\n\n\006STRING\020\004\022\t\n\005BYT"
      "ES\020\005\022\017\n\013INT32_ARRAY\020\006\022\017\n\013INT64_ARRAY\020\007\022\020"
      "\n\014DOUBLE_ARRAY\020\010\022\020\n\014STRING_ARRAY\020\t\022\016\n\nPA"
      "IR_ARRAY\020\n\022\010\n\004NONE\020\013\022\010\n\004DATE\020\014B+\n!com.al"
      "ibaba.graphscope.gaia.protoB\006Commonb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 883);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2eproto
namespace common {
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[0];
}
bool DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void None::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

None::None()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_None.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.None)
}
None::None(const None& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.None)
}

void None::SharedCtor() {
}

None::~None() {
  // @@protoc_insertion_point(destructor:common.None)
  SharedDtor();
}

void None::SharedDtor() {
}

void None::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* None::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const None& None::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_None.base);
  return *internal_default_instance();
}


void None::Clear() {
// @@protoc_insertion_point(message_clear_start:common.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool None::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.None)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.None)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.None)
  return false;
#undef DO_
}

void None::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.None)
}

::google::protobuf::uint8* None::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.None)
  return target;
}

size_t None::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.None)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void None::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.None)
  GOOGLE_DCHECK_NE(&from, this);
  const None* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const None>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.None)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.None)
    MergeFrom(*source);
  }
}

void None::MergeFrom(const None& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.None)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void None::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.None)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void None::CopyFrom(const None& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.None)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool None::IsInitialized() const {
  return true;
}

void None::Swap(None* other) {
  if (other == this) return;
  InternalSwap(other);
}
void None::InternalSwap(None* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata None::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void I32Array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int I32Array::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

I32Array::I32Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_I32Array.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.I32Array)
}
I32Array::I32Array(const I32Array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.I32Array)
}

void I32Array::SharedCtor() {
}

I32Array::~I32Array() {
  // @@protoc_insertion_point(destructor:common.I32Array)
  SharedDtor();
}

void I32Array::SharedDtor() {
}

void I32Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* I32Array::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const I32Array& I32Array::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_I32Array.base);
  return *internal_default_instance();
}


void I32Array::Clear() {
// @@protoc_insertion_point(message_clear_start:common.I32Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool I32Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.I32Array)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_item())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.I32Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.I32Array)
  return false;
#undef DO_
}

void I32Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.I32Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 item = 1;
  if (this->item_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _item_cached_byte_size_));
  }
  for (int i = 0, n = this->item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->item(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.I32Array)
}

::google::protobuf::uint8* I32Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.I32Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 item = 1;
  if (this->item_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _item_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->item_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.I32Array)
  return target;
}

size_t I32Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.I32Array)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 item = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->item_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _item_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void I32Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.I32Array)
  GOOGLE_DCHECK_NE(&from, this);
  const I32Array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const I32Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.I32Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.I32Array)
    MergeFrom(*source);
  }
}

void I32Array::MergeFrom(const I32Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.I32Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void I32Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.I32Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I32Array::CopyFrom(const I32Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.I32Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I32Array::IsInitialized() const {
  return true;
}

void I32Array::Swap(I32Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void I32Array::InternalSwap(I32Array* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata I32Array::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void I64Array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int I64Array::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

I64Array::I64Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_I64Array.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.I64Array)
}
I64Array::I64Array(const I64Array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.I64Array)
}

void I64Array::SharedCtor() {
}

I64Array::~I64Array() {
  // @@protoc_insertion_point(destructor:common.I64Array)
  SharedDtor();
}

void I64Array::SharedDtor() {
}

void I64Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* I64Array::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const I64Array& I64Array::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_I64Array.base);
  return *internal_default_instance();
}


void I64Array::Clear() {
// @@protoc_insertion_point(message_clear_start:common.I64Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool I64Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.I64Array)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_item())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_item())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.I64Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.I64Array)
  return false;
#undef DO_
}

void I64Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.I64Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 item = 1;
  if (this->item_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _item_cached_byte_size_));
  }
  for (int i = 0, n = this->item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->item(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.I64Array)
}

::google::protobuf::uint8* I64Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.I64Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 item = 1;
  if (this->item_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _item_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->item_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.I64Array)
  return target;
}

size_t I64Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.I64Array)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 item = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->item_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _item_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void I64Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.I64Array)
  GOOGLE_DCHECK_NE(&from, this);
  const I64Array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const I64Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.I64Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.I64Array)
    MergeFrom(*source);
  }
}

void I64Array::MergeFrom(const I64Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.I64Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void I64Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.I64Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I64Array::CopyFrom(const I64Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.I64Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I64Array::IsInitialized() const {
  return true;
}

void I64Array::Swap(I64Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void I64Array::InternalSwap(I64Array* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata I64Array::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleArray::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleArray::DoubleArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_DoubleArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.DoubleArray)
}
DoubleArray::DoubleArray(const DoubleArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.DoubleArray)
}

void DoubleArray::SharedCtor() {
}

DoubleArray::~DoubleArray() {
  // @@protoc_insertion_point(destructor:common.DoubleArray)
  SharedDtor();
}

void DoubleArray::SharedDtor() {
}

void DoubleArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoubleArray::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleArray& DoubleArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_DoubleArray.base);
  return *internal_default_instance();
}


void DoubleArray::Clear() {
// @@protoc_insertion_point(message_clear_start:common.DoubleArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.DoubleArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_item())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_item())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.DoubleArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.DoubleArray)
  return false;
#undef DO_
}

void DoubleArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.DoubleArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double item = 1;
  if (this->item_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _item_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->item().data(), this->item_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.DoubleArray)
}

::google::protobuf::uint8* DoubleArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.DoubleArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double item = 1;
  if (this->item_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _item_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->item_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.DoubleArray)
  return target;
}

size_t DoubleArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.DoubleArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _item_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.DoubleArray)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.DoubleArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.DoubleArray)
    MergeFrom(*source);
  }
}

void DoubleArray::MergeFrom(const DoubleArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.DoubleArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void DoubleArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.DoubleArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleArray::CopyFrom(const DoubleArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.DoubleArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleArray::IsInitialized() const {
  return true;
}

void DoubleArray::Swap(DoubleArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleArray::InternalSwap(DoubleArray* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoubleArray::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringArray::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringArray::StringArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_StringArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.StringArray)
}
StringArray::StringArray(const StringArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.StringArray)
}

void StringArray::SharedCtor() {
}

StringArray::~StringArray() {
  // @@protoc_insertion_point(destructor:common.StringArray)
  SharedDtor();
}

void StringArray::SharedDtor() {
}

void StringArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringArray::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringArray& StringArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_StringArray.base);
  return *internal_default_instance();
}


void StringArray::Clear() {
// @@protoc_insertion_point(message_clear_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool StringArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.StringArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_item()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item(this->item_size() - 1).data(),
            static_cast<int>(this->item(this->item_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.StringArray.item"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.StringArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.StringArray)
  return false;
#undef DO_
}

void StringArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string item = 1;
  for (int i = 0, n = this->item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item(i).data(), static_cast<int>(this->item(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.StringArray.item");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->item(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.StringArray)
}

::google::protobuf::uint8* StringArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string item = 1;
  for (int i = 0, n = this->item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item(i).data(), static_cast<int>(this->item(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.StringArray.item");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->item(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.StringArray)
  return target;
}

size_t StringArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.StringArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string item = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->item_size());
  for (int i = 0, n = this->item_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->item(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  const StringArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.StringArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.StringArray)
    MergeFrom(*source);
  }
}

void StringArray::MergeFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void StringArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringArray::CopyFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringArray::IsInitialized() const {
  return true;
}

void StringArray::Swap(StringArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringArray::InternalSwap(StringArray* other) {
  using std::swap;
  item_.InternalSwap(CastToBase(&other->item_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringArray::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pair::InitAsDefaultInstance() {
  ::common::_Pair_default_instance_._instance.get_mutable()->key_ = const_cast< ::common::Value*>(
      ::common::Value::internal_default_instance());
  ::common::_Pair_default_instance_._instance.get_mutable()->val_ = const_cast< ::common::Value*>(
      ::common::Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pair::kKeyFieldNumber;
const int Pair::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pair::Pair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Pair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Pair)
}
Pair::Pair(const Pair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::common::Value(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_val()) {
    val_ = new ::common::Value(*from.val_);
  } else {
    val_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Pair)
}

void Pair::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_) -
      reinterpret_cast<char*>(&key_)) + sizeof(val_));
}

Pair::~Pair() {
  // @@protoc_insertion_point(destructor:common.Pair)
  SharedDtor();
}

void Pair::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete val_;
}

void Pair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pair::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pair& Pair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Pair.base);
  return *internal_default_instance();
}


void Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && val_ != NULL) {
    delete val_;
  }
  val_ = NULL;
  _internal_metadata_.Clear();
}

bool Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Pair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Value key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Value val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Pair)
  return false;
#undef DO_
}

void Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Value key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .common.Value val = 2;
  if (this->has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Pair)
}

::google::protobuf::uint8* Pair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Value key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .common.Value val = 2;
  if (this->has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_val(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Pair)
  return target;
}

size_t Pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Pair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Value key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .common.Value val = 2;
  if (this->has_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *val_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Pair)
  GOOGLE_DCHECK_NE(&from, this);
  const Pair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Pair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Pair)
    MergeFrom(*source);
  }
}

void Pair::MergeFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Pair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::common::Value::MergeFrom(from.key());
  }
  if (from.has_val()) {
    mutable_val()->::common::Value::MergeFrom(from.val());
  }
}

void Pair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pair::CopyFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pair::IsInitialized() const {
  return true;
}

void Pair::Swap(Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pair::InternalSwap(Pair* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(val_, other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pair::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairArray::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairArray::PairArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Pair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.PairArray)
}
PairArray::PairArray(const PairArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.PairArray)
}

void PairArray::SharedCtor() {
}

PairArray::~PairArray() {
  // @@protoc_insertion_point(destructor:common.PairArray)
  SharedDtor();
}

void PairArray::SharedDtor() {
}

void PairArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairArray::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairArray& PairArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Pair.base);
  return *internal_default_instance();
}


void PairArray::Clear() {
// @@protoc_insertion_point(message_clear_start:common.PairArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool PairArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.PairArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.Pair item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.PairArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.PairArray)
  return false;
#undef DO_
}

void PairArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.PairArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Pair item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->item(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.PairArray)
}

::google::protobuf::uint8* PairArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.PairArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.Pair item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.PairArray)
  return target;
}

size_t PairArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.PairArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.Pair item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.PairArray)
  GOOGLE_DCHECK_NE(&from, this);
  const PairArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.PairArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.PairArray)
    MergeFrom(*source);
  }
}

void PairArray::MergeFrom(const PairArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.PairArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void PairArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.PairArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairArray::CopyFrom(const PairArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.PairArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairArray::IsInitialized() const {
  return true;
}

void PairArray::Swap(PairArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairArray::InternalSwap(PairArray* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairArray::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameOrId::InitAsDefaultInstance() {
  ::common::_NameOrId_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::common::_NameOrId_default_instance_.id_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameOrId::kNameFieldNumber;
const int NameOrId::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameOrId::NameOrId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_NameOrId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.NameOrId)
}
NameOrId::NameOrId(const NameOrId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.NameOrId)
}

void NameOrId::SharedCtor() {
  clear_has_item();
}

NameOrId::~NameOrId() {
  // @@protoc_insertion_point(destructor:common.NameOrId)
  SharedDtor();
}

void NameOrId::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void NameOrId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameOrId::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameOrId& NameOrId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_NameOrId.base);
  return *internal_default_instance();
}


void NameOrId::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:common.NameOrId)
  switch (item_case()) {
    case kName: {
      item_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kId: {
      // No need to clear
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void NameOrId::Clear() {
// @@protoc_insertion_point(message_clear_start:common.NameOrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool NameOrId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.NameOrId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.NameOrId.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_.id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.NameOrId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.NameOrId)
  return false;
#undef DO_
}

void NameOrId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.NameOrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.NameOrId.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.NameOrId)
}

::google::protobuf::uint8* NameOrId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.NameOrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.NameOrId.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.NameOrId)
  return target;
}

size_t NameOrId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.NameOrId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // string name = 1;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    // int32 id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameOrId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.NameOrId)
  GOOGLE_DCHECK_NE(&from, this);
  const NameOrId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameOrId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.NameOrId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.NameOrId)
    MergeFrom(*source);
  }
}

void NameOrId::MergeFrom(const NameOrId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.NameOrId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void NameOrId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.NameOrId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameOrId::CopyFrom(const NameOrId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.NameOrId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameOrId::IsInitialized() const {
  return true;
}

void NameOrId::Swap(NameOrId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameOrId::InternalSwap(NameOrId* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameOrId::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value::InitAsDefaultInstance() {
  ::common::_Value_default_instance_.boolean_ = false;
  ::common::_Value_default_instance_.i32_ = 0;
  ::common::_Value_default_instance_.i64_ = GOOGLE_LONGLONG(0);
  ::common::_Value_default_instance_.f64_ = 0;
  ::common::_Value_default_instance_.str_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::common::_Value_default_instance_.blob_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::common::_Value_default_instance_.i32_array_ = const_cast< ::common::I32Array*>(
      ::common::I32Array::internal_default_instance());
  ::common::_Value_default_instance_.i64_array_ = const_cast< ::common::I64Array*>(
      ::common::I64Array::internal_default_instance());
  ::common::_Value_default_instance_.f64_array_ = const_cast< ::common::DoubleArray*>(
      ::common::DoubleArray::internal_default_instance());
  ::common::_Value_default_instance_.str_array_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::common::_Value_default_instance_.pair_array_ = const_cast< ::common::PairArray*>(
      ::common::PairArray::internal_default_instance());
  ::common::_Value_default_instance_.none_ = const_cast< ::common::None*>(
      ::common::None::internal_default_instance());
}
void Value::set_allocated_i32_array(::common::I32Array* i32_array) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (i32_array) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i32_array = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i32_array, submessage_arena);
    }
    set_has_i32_array();
    item_.i32_array_ = i32_array;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.i32_array)
}
void Value::set_allocated_i64_array(::common::I64Array* i64_array) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (i64_array) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i64_array = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i64_array, submessage_arena);
    }
    set_has_i64_array();
    item_.i64_array_ = i64_array;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.i64_array)
}
void Value::set_allocated_f64_array(::common::DoubleArray* f64_array) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (f64_array) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      f64_array = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, f64_array, submessage_arena);
    }
    set_has_f64_array();
    item_.f64_array_ = f64_array;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.f64_array)
}
void Value::set_allocated_str_array(::common::StringArray* str_array) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (str_array) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      str_array = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, str_array, submessage_arena);
    }
    set_has_str_array();
    item_.str_array_ = str_array;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.str_array)
}
void Value::set_allocated_pair_array(::common::PairArray* pair_array) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (pair_array) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pair_array = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pair_array, submessage_arena);
    }
    set_has_pair_array();
    item_.pair_array_ = pair_array;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.pair_array)
}
void Value::set_allocated_none(::common::None* none) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (none) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      none = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, none, submessage_arena);
    }
    set_has_none();
    item_.none_ = none;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Value.none)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kBooleanFieldNumber;
const int Value::kI32FieldNumber;
const int Value::kI64FieldNumber;
const int Value::kF64FieldNumber;
const int Value::kStrFieldNumber;
const int Value::kBlobFieldNumber;
const int Value::kI32ArrayFieldNumber;
const int Value::kI64ArrayFieldNumber;
const int Value::kF64ArrayFieldNumber;
const int Value::kStrArrayFieldNumber;
const int Value::kPairArrayFieldNumber;
const int Value::kNoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Pair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kI32: {
      set_i32(from.i32());
      break;
    }
    case kI64: {
      set_i64(from.i64());
      break;
    }
    case kF64: {
      set_f64(from.f64());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBlob: {
      set_blob(from.blob());
      break;
    }
    case kI32Array: {
      mutable_i32_array()->::common::I32Array::MergeFrom(from.i32_array());
      break;
    }
    case kI64Array: {
      mutable_i64_array()->::common::I64Array::MergeFrom(from.i64_array());
      break;
    }
    case kF64Array: {
      mutable_f64_array()->::common::DoubleArray::MergeFrom(from.f64_array());
      break;
    }
    case kStrArray: {
      mutable_str_array()->::common::StringArray::MergeFrom(from.str_array());
      break;
    }
    case kPairArray: {
      mutable_pair_array()->::common::PairArray::MergeFrom(from.pair_array());
      break;
    }
    case kNone: {
      mutable_none()->::common::None::MergeFrom(from.none());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.Value)
}

void Value::SharedCtor() {
  clear_has_item();
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:common.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Pair.base);
  return *internal_default_instance();
}


void Value::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:common.Value)
  switch (item_case()) {
    case kBoolean: {
      // No need to clear
      break;
    }
    case kI32: {
      // No need to clear
      break;
    }
    case kI64: {
      // No need to clear
      break;
    }
    case kF64: {
      // No need to clear
      break;
    }
    case kStr: {
      item_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBlob: {
      item_.blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kI32Array: {
      delete item_.i32_array_;
      break;
    }
    case kI64Array: {
      delete item_.i64_array_;
      break;
    }
    case kF64Array: {
      delete item_.f64_array_;
      break;
    }
    case kStrArray: {
      delete item_.str_array_;
      break;
    }
    case kPairArray: {
      delete item_.pair_array_;
      break;
    }
    case kNone: {
      delete item_.none_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 i32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_.i32_)));
          set_has_i32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 i64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_.i64_)));
          set_has_i64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double f64 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          clear_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &item_.f64_)));
          set_has_f64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.Value.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes blob = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.I32Array i32_array = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i32_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.I64Array i64_array = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i64_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.DoubleArray f64_array = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f64_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray str_array = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_str_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.PairArray pair_array = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pair_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.None none = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_none()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->boolean(), output);
  }

  // int32 i32 = 3;
  if (has_i32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i32(), output);
  }

  // int64 i64 = 4;
  if (has_i64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->i64(), output);
  }

  // double f64 = 5;
  if (has_f64()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->f64(), output);
  }

  // string str = 6;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.Value.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->str(), output);
  }

  // bytes blob = 7;
  if (has_blob()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->blob(), output);
  }

  // .common.I32Array i32_array = 8;
  if (has_i32_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_i32_array(), output);
  }

  // .common.I64Array i64_array = 9;
  if (has_i64_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_i64_array(), output);
  }

  // .common.DoubleArray f64_array = 10;
  if (has_f64_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_f64_array(), output);
  }

  // .common.StringArray str_array = 11;
  if (has_str_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_str_array(), output);
  }

  // .common.PairArray pair_array = 12;
  if (has_pair_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_pair_array(), output);
  }

  // .common.None none = 13;
  if (has_none()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_none(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->boolean(), target);
  }

  // int32 i32 = 3;
  if (has_i32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->i32(), target);
  }

  // int64 i64 = 4;
  if (has_i64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->i64(), target);
  }

  // double f64 = 5;
  if (has_f64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->f64(), target);
  }

  // string str = 6;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.Value.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->str(), target);
  }

  // bytes blob = 7;
  if (has_blob()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->blob(), target);
  }

  // .common.I32Array i32_array = 8;
  if (has_i32_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_i32_array(), deterministic, target);
  }

  // .common.I64Array i64_array = 9;
  if (has_i64_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_i64_array(), deterministic, target);
  }

  // .common.DoubleArray f64_array = 10;
  if (has_f64_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_f64_array(), deterministic, target);
  }

  // .common.StringArray str_array = 11;
  if (has_str_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_str_array(), deterministic, target);
  }

  // .common.PairArray pair_array = 12;
  if (has_pair_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_pair_array(), deterministic, target);
  }

  // .common.None none = 13;
  if (has_none()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_none(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // bool boolean = 2;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // int32 i32 = 3;
    case kI32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i32());
      break;
    }
    // int64 i64 = 4;
    case kI64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i64());
      break;
    }
    // double f64 = 5;
    case kF64: {
      total_size += 1 + 8;
      break;
    }
    // string str = 6;
    case kStr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
      break;
    }
    // bytes blob = 7;
    case kBlob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->blob());
      break;
    }
    // .common.I32Array i32_array = 8;
    case kI32Array: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.i32_array_);
      break;
    }
    // .common.I64Array i64_array = 9;
    case kI64Array: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.i64_array_);
      break;
    }
    // .common.DoubleArray f64_array = 10;
    case kF64Array: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.f64_array_);
      break;
    }
    // .common.StringArray str_array = 11;
    case kStrArray: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.str_array_);
      break;
    }
    // .common.PairArray pair_array = 12;
    case kPairArray: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.pair_array_);
      break;
    }
    // .common.None none = 13;
    case kNone: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.none_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kI32: {
      set_i32(from.i32());
      break;
    }
    case kI64: {
      set_i64(from.i64());
      break;
    }
    case kF64: {
      set_f64(from.f64());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBlob: {
      set_blob(from.blob());
      break;
    }
    case kI32Array: {
      mutable_i32_array()->::common::I32Array::MergeFrom(from.i32_array());
      break;
    }
    case kI64Array: {
      mutable_i64_array()->::common::I64Array::MergeFrom(from.i64_array());
      break;
    }
    case kF64Array: {
      mutable_f64_array()->::common::DoubleArray::MergeFrom(from.f64_array());
      break;
    }
    case kStrArray: {
      mutable_str_array()->::common::StringArray::MergeFrom(from.str_array());
      break;
    }
    case kPairArray: {
      mutable_pair_array()->::common::PairArray::MergeFrom(from.pair_array());
      break;
    }
    case kNone: {
      mutable_none()->::common::None::MergeFrom(from.none());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::None* Arena::CreateMaybeMessage< ::common::None >(Arena* arena) {
  return Arena::CreateInternal< ::common::None >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::I32Array* Arena::CreateMaybeMessage< ::common::I32Array >(Arena* arena) {
  return Arena::CreateInternal< ::common::I32Array >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::I64Array* Arena::CreateMaybeMessage< ::common::I64Array >(Arena* arena) {
  return Arena::CreateInternal< ::common::I64Array >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::DoubleArray* Arena::CreateMaybeMessage< ::common::DoubleArray >(Arena* arena) {
  return Arena::CreateInternal< ::common::DoubleArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::StringArray* Arena::CreateMaybeMessage< ::common::StringArray >(Arena* arena) {
  return Arena::CreateInternal< ::common::StringArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Pair* Arena::CreateMaybeMessage< ::common::Pair >(Arena* arena) {
  return Arena::CreateInternal< ::common::Pair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::PairArray* Arena::CreateMaybeMessage< ::common::PairArray >(Arena* arena) {
  return Arena::CreateInternal< ::common::PairArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::NameOrId* Arena::CreateMaybeMessage< ::common::NameOrId >(Arena* arena) {
  return Arena::CreateInternal< ::common::NameOrId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Value* Arena::CreateMaybeMessage< ::common::Value >(Arena* arena) {
  return Arena::CreateInternal< ::common::Value >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
